{"version":3,"sources":["Views/SingleDiscussion/styles.module.css","Components/UserProfile/Profile/styles.module.css","Components/Header/Logo/styles.module.css","Components/Dashboard/Counts/styles.module.css","Components/Tag/styles.module.css","Views/ForumFeed/styles.module.css","Components/NewDiscussion/PinButton/styles.module.css","Views/UserProfile/styles.module.css","Containers/Header/styles.module.css","Components/Footer/styles.module.css","Containers/AdminHeader/styles.module.css","Components/SideBar/styles.module.css","Components/SingleDiscussion/ReplyBox/styles.module.css","SharedStyles/appLayout.module.css","Components/Dashboard/ForumBox/styles.module.css","Components/RichEditor/styles.module.css","Components/SingleDiscussion/Discussion/styles.module.css","App/constants.js","App/reducers.js","Views/ForumFeed/constants.js","Views/ForumFeed/reducers.js","Views/SingleDiscussion/constants.js","Views/SingleDiscussion/reducers.js","Views/NewDiscussion/constants.js","Views/NewDiscussion/reducers.js","Views/AdminDashboard/constants.js","Views/AdminDashboard/reducers.js","Views/UserProfile/constants.js","Views/UserProfile/reducers.js","App/store.js","env.js","Components/Button/index.js","App/storage.js","util/base32.js","App/api.js","App/actions.js","Components/Header/UserMenu/index.js","Components/Header/UserMenu/api.js","Components/Header/Logo/index.js","Components/Header/NavigationBar/index.js","SharedStyles/placeholder.jpg","Containers/Header/index.js","Components/Footer/index.js","App/App.js","Containers/AdminHeader/index.js","App/Admin.js","Views/AdminDashboard/api.js","Views/AdminDashboard/actions.js","Components/Dashboard/Counts/index.js","Components/Dashboard/ForumBox/index.js","Views/AdminDashboard/index.js","Views/ForumFeed/api.js","Views/ForumFeed/actions.js","Components/Tag/index.js","Components/FeedBox/DiscussionBox/index.js","Components/FeedBox/index.js","Components/SideBar/index.js","Views/ForumFeed/index.js","Views/SingleDiscussion/api.js","Views/SingleDiscussion/actions.js","Components/RichMediaEditor/index.js","Components/SingleDiscussion/Discussion/index.js","Components/SingleDiscussion/ReplyBox/index.js","Components/SingleDiscussion/Opinion/index.js","Views/SingleDiscussion/index.js","Components/RichEditor/StyleButton.js","Components/RichEditor/BlockStyleControls.js","Components/RichEditor/InlineStyleControls.js","Components/RichEditor/index.js","Components/NewDiscussion/PinButton/index.js","Components/NewDiscussion/TagsInput/index.js","Views/NewDiscussion/actions.js","Views/NewDiscussion/api.js","Views/NewDiscussion/index.js","Components/UserProfile/Profile/index.js","Views/UserProfile/actions.js","Views/UserProfile/api.js","Views/UserProfile/index.js","Views/NotFound/index.js","index.js","Components/FeedBox/styles.module.css","Components/FeedBox/DiscussionBox/styles.module.css","Views/NewDiscussion/styles.module.css","Components/SingleDiscussion/Opinion/styles.module.css","Components/NewDiscussion/TagsInput/styles.module.css","Components/Header/UserMenu/styles.module.css","Components/Button/styles.module.css","App/styles.module.css","Components/Header/NavigationBar/styles.module.css","Views/AdminDashboard/styles.module.css","Components/RichMediaEditor/styles.module.css"],"names":["module","exports","UPDATECURRENTFORUM","START_FETCHING_FORUMS","STOP_FETCHING_FORUMS","FETCHING_FORUMS_SUCCESS","FETCHING_FORUMS_FAILURE","START_FETCHING_USER","FETCHING_USER_SUCCESS","FETCHING_USER_FAILURE","START_FETCHING_NETWORK_STATUS","STOP_FETCHING_NETWORK_STATUS","FETCHING_NETWORK_STATUS_SUCCESS","FETCHING_NETWORK_STATUS_FAILURE","initialState","fetchingForums","forums","currentForum","error","initialNetworkStatusState","fetchingNetworkStatus","networkStatus","initialUserState","fetchingUser","authenticated","_id","name","email","username","avatarUrl","githubUrl","githubLocation","githubBio","role","START_FETCHING_DISCUSSIONS","STOP_FETCHING_DISCUSSIONS","FETCHING_DISCUSSIONS_SUCCESS","FETCHING_DISCUSSIONS_FAILURE","START_FETCHING_PINNED_DISCUSSIONS","STOP_FETCHING_PINNED_DISCUSSIONS","FETCHING_PINNED_DISCUSSIONS_SUCCESS","FETCHING_PINNED_DISCUSSIONS_FAILURE","UPDATE_SORTING_METHOD","INVALID_FORUM","fetchingDiscussions","discussions","fetchingPinnedDiscussions","pinnedDiscussions","sortingMethod","FETCHING_SINGLE_DISC_START","FETCHING_SINGLE_DISC_END","FETCHING_SINGLE_DISC_SUCCESS","FETCHING_SINGLE_DISC_FAILURE","TOGGLE_FAVORITE_START","TOGGLE_FAVORITE_SUCCESS","TOGGLE_FAVORITE_FAILURE","UPDATE_OPINION_CONTENT","POSTING_OPINION_START","POSTING_OPINION_SUCCESS","POSTING_OPINION_FAILURE","DELETE_DISC_START","DELETE_DISC_SUCCESS","DELETE_DISC_FAILURE","DELETE_DISC_REDIRECT","DELETE_OPINION_START","DELETE_OPINION_SUCCESS","DELETE_OPINION_FAILURE","fetchingDiscussion","toggleingFavorite","postingOpinion","opinionContent","opinionError","deletingDiscussion","deletedDiscussion","deletingOpinion","discussion","POSTING_DISCUSSION_START","POSTING_DISCUSSION_SUCCESS","POSTING_DISCUSSION_FAILURE","UPDATE_DISCUSSION_TITLE","UPDATE_DISCUSSION_CONTENT","UPDATE_DISCUSSION_PIN_STATUS","UPDATE_DISCUSSION_TAGS","CLEAR_SUCCESS_MESSAGE","postingSuccess","errorMsg","postingDiscussion","title","content","tags","pinned","GET_ALL_INFO_START","GET_ALL_INFO_SUCCESS","GET_ALL_INFO_FAILURE","CREATE_FORUM","CREATE_FORUM_SUCCESS","CREATE_FORUM_FAILURE","DELETE_FORUM","DELETE_FORUM_SUCCESS","DELETE_FORUM_FAILURE","loadingInfo","info","discussionCount","opinionCount","forumCount","userCount","creatingForum","creatingForumError","deletingForum","deletingForumError","FETCH_USER_PROFILE_START","FETCH_USER_PROFILE_SUCCESS","FETCH_USER_PROFILE_FAILURE","fetchingProfile","profile","rootReducer","combineReducers","state","action","type","Object","assign","user","fetchUser","payload","app","feed","newDiscussion","adminInfo","userProfile","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Button","this","props","fullWidth","noUppercase","className","style","onClick","alwaysActive","classnames","styles","button","buttonDefaults","children","Component","defaultProps","storage","set","key","value","localStorage","setItem","JSON","stringify","get","parse","getItem","remove","removeItem","keccak256","require","getForums","dispatch","getState","axios","env","then","data","forumTable","url","hashCode","toString","fetchForumsIpfs","getNetworkStatus","timeout","getUser","accessString","headers","Authorization","UserMenu","activeSubMenu","subMenuStatus","password","anchorEl","snackbarOpen","toggleSubMenu","bind","toggleSignUpMenu","userNameHandleChange","passwordHandleChange","submit","signoutClick","handleClose","gotoProfile","snackbarClose","setState","event","currentTarget","prevState","target","post","enqueueSnackbar","gitHandler","signedIn","hashHistory","push","subMenu","Dialog","onClose","open","aria-labelledby","DialogTitle","id","DialogContent","Avatar","margin","backgroundColor","TextField","variant","required","label","autoComplete","autoFocus","onChange","marginTop","color","Menu","keepMounted","Boolean","MenuItem","userName","avatar","signOutAction","position","container","renderSubMenu","signInBtn","justifyContent","Logo","logoContainer","logo","viewBox","xmlns","stroke","strokeWidth","fill","fillRule","d","cx","cy","r","logoTitle","NavigationBar","navigationLinks","navigationBar","map","link","links","activeClassName","linkActive","to","_","uniqueId","Header","forum","forum_name","forum_slug","appLayout","constraintWidth","headerTop","renderNavLinks","connect","Footer","contentArea","AppContainer","params","updateCurrentForum","setTimeout","newCurrentForum","Helmet","gitForkTag","gitLink","href","loadingWrapper","AdminHeader","AdminContainer","textAlign","getAdminDashboardInfoAPI","createForum","forumObj","forum_obj","createForumAPI","forumData","created","deleteForum","forumId","forum_id","deleteForumAPI","deleted","Counts","count","ForumBox","newForumTitle","newForumSlug","handleCreateForum","convertedTitle","convertedSlug","trim","length","match","createAction","slug","deleteAction","forumsContainer","loadingMsg","forumTitle","forumSlug","removeButton","createForumContainer","createTitle","createInputContainer","inputLabel","createInput","placeholder","e","Dashboard","getAdminDashboardInfo","forumsArray","countsContainer","fetchDiscussions","pageNum","fetchDiscussionsIpfs","getPinnedDiscussions","feedChanged","console","log","fetchPinnedDiscussionsIpfs","Tag","withRemove","removeAction","tag","tagWithRemove","DiscussionBox","voteCount","userGitHandler","discussionTitle","time","timeDisplay","Moment","from","titleBottomMargin","Link","component","RouterLink","posterInfo","boxFooter","tagsArea","postInfo","discussionId","FeedBox","activeSortingMethod","onChangeSortingMethod","sortList","sort","sortActive","loading","discussionBoxTitle","header","renderSort","renderEmptyDiscussionLine","date","opinion_count","favorites","discussion_slug","val","SideBar","sidebarContainer","textDecoration","startIcon","ForumFeed","currentForumId","getDiscussions","prevProps","alert","newSortingMethod","updateSortingMethod","showOnMediumBP","newDiscussionBtn","primaryContent","renderNewDiscussionButtion","handleSortingChange","display","paddingTop","paddingBottom","flex","previousPage","nextPage","secondaryContent","currentForumObj","find","sortingChanged","method","fetchSingleDiscussion","getDiscussion","discussionSlug","fetchSingleDiscussionIpfs","toggleFavorite","discussion_id","toggleFavoriteApi","postOpinion","opinion","postOpinionApi","deletePost","delete","deletePostApi","deleteOpinion","opinionId","deleteOpinionApi","RichMediaEditor","editorState","EditorState","createEmpty","onEditorStateChange","contentState","convertFromRaw","createWithContent","isLivinig","convertToRaw","getCurrentContent","outputHTML","onSave","readOnly","saveButtonLabel","controls","readOnlyContainer","editorContainer","readOnlyEditorContainer","contentStyle","height","language","endIcon","React","Discussion","userAvatar","discTitle","discDate","discContent","favoriteCount","favoriteAction","userFavorited","allowDelete","dateDisplay","moment","favCount","infoContainer","columnOnSmallBP","userInfo","dateInfo","discFooter","favoriteButton","deleteButton","trashIcon","PlaceholderImage","ReplyBox","posting","onSubmit","Opinion","opDate","opContent","userId","currentUserId","currentUserRole","SingleDiscussion","deletedDiscussionRedirect","browserHistory","updateOpinionContent","favorited","i","user_id","userAuthenticated","opinions","userRole","userFavoritedDiscussion","deleteDiscussion","signInMsg","handleReplySubmit","StyleButton","onToggle","preventDefault","controlButton","active","controlButtonActive","onMouseDown","BlockStyleControls","selection","getSelection","blockType","getBlockForKey","getStartKey","getType","eachType","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","RichEditor","focus","refs","editor","handleKeyCommand","onTab","toggleBlockType","toggleInlineStyle","command","newState","RichUtils","inlineStyle","contentBlock","editorBlockquoteStyle","editorCodeStyle","editorH1Style","editorH2Style","editorH3Style","controlsContainer","customStyleMap","border","fontFamily","padding","blockStyleFn","customBlockStyles","ref","alignSelf","PinButton","nextProps","btnContainer","updateValue","TagsInput","tagName","test","matched","validateTag","sameTag","newTags","concat","slice","removeTag","maxTagCount","inputContainer","tagInput","addButton","addTag","fontSize","tagContainer","renderTags","renderInput","postDiscussion","validated","postDiscussionApi","postCreated","NewDiscussion","fatalError","setUserAndForumID","updateDiscussionTitle","updateDiscussionContent","updateDiscussionPinStatus","updateDiscussionTags","titleInput","forumInfo","forumName","successMsg","renderEditor","postingMsg","Profile","location","avatarContainer","fetchUserProfile","userSlug","fetchUserProfileApi","UserProfile","newProps","oldUsername","futureUsername","github","NotFound","ReactDOM","render","appStore","history","path","document","getElementById"],"mappings":"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","file":"static/js/main.53481cc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryFontColor\":\"#000\",\"secondaryFontColor\":\"#999\",\"loadingWrapper\":\"styles_loadingWrapper__1r2cv\",\"errorMsg\":\"styles_errorMsg__3WoNY\",\"signInMsg\":\"styles_signInMsg__3bMaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryFontColor\":\"#000\",\"secondaryFontColor\":\"#999\",\"container\":\"styles_container__68klE\",\"avatarContainer\":\"styles_avatarContainer__1TpHj\",\"avatar\":\"styles_avatar__HYwig\",\"infoContainer\":\"styles_infoContainer__3D8HQ\",\"name\":\"styles_name__2SfKV\",\"gitHandler\":\"styles_gitHandler__2WjFp\",\"location\":\"styles_location__k2BLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoContainer\":\"styles_logoContainer__5iU05\",\"logo\":\"styles_logo__zU5P-\",\"logoTitle\":\"styles_logoTitle__1V39j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryFontColor\":\"#000\",\"secondaryFontColor\":\"#999\",\"borderColor\":\"#e8e8e8\",\"smallBP\":\"(max-width: 768px)\",\"container\":\"styles_container__2JuVe\",\"count\":\"styles_count__1eOtj\",\"label\":\"styles_label__78E53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondaryFontColor\":\"#999\",\"backShade\":\"#f9f9f9\",\"tag\":\"styles_tag__w-k5X\",\"tagWithRemove\":\"styles_tagWithRemove__39-Sh\",\"removeButton\":\"styles_removeButton__LDxi8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"largeBP\":\"(min-width: 1100px)\",\"contentArea\":\"styles_contentArea__L8v3p\",\"newDiscussionBtn\":\"styles_newDiscussionBtn__3rEEg\",\"errorMsg\":\"styles_errorMsg__3dngL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryFontColor\":\"#000\",\"secondaryFontColor\":\"#999\",\"borderColor\":\"#e8e8e8\",\"smallBP\":\"(max-width: 768px)\",\"container\":\"styles_container__19Ms9\",\"label\":\"styles_label__3SOgA\",\"btnContainer\":\"styles_btnContainer__4Rups\",\"button\":\"styles_button___K1-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"largeBP\":\"(min-width: 1100px)\",\"container\":\"styles_container__2YkU5\",\"loadingMsg\":\"styles_loadingMsg__2NefF\",\"errorMsg\":\"styles_errorMsg__1hFKp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallBP\":\"(max-width: 768px)\",\"headerTop\":\"styles_headerTop__2STOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallBP\":\"(max-width: 768px)\",\"mediumBP\":\"(min-width: 769px) and (max-width: 1099px)\",\"largeBP\":\"(min-width: 1100px)\",\"contentArea\":\"styles_contentArea__15uug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallBP\":\"(max-width: 768px)\",\"headerTop\":\"styles_headerTop__3dMT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallBP\":\"(max-width: 768px)\",\"mediumBP\":\"(min-width: 769px) and (max-width: 1099px)\",\"largeBP\":\"(min-width: 1100px)\",\"sidebarContainer\":\"styles_sidebarContainer__2xxnG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryFontColor\":\"#000\",\"secondaryFontColor\":\"#999\",\"loadingWrapper\":\"styles_loadingWrapper__Z4elJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"largeBP\":\"(min-width: 1100px)\",\"mediumBP\":\"(min-width: 769px) and (max-width: 1099px)\",\"smallBP\":\"(max-width: 768px)\",\"constraintWidth\":\"appLayout_constraintWidth__2DEFw\",\"primaryContent\":\"appLayout_primaryContent__3PC2E\",\"secondaryContent\":\"appLayout_secondaryContent__2M6DX\",\"showOnMediumBP\":\"appLayout_showOnMediumBP__3Vpn7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryFontColor\":\"#000\",\"secondaryFontColor\":\"#999\",\"borderColor\":\"#e8e8e8\",\"smallBP\":\"(max-width: 768px)\",\"container\":\"styles_container__3HYxk\",\"title\":\"styles_title__1T3iZ\",\"forumsContainer\":\"styles_forumsContainer__1M3uf\",\"forum\":\"styles_forum__3FhNu\",\"forumTitle\":\"styles_forumTitle__2GzW6\",\"forumSlug\":\"styles_forumSlug__M8sd2\",\"createForumContainer\":\"styles_createForumContainer__1syq_\",\"createTitle\":\"styles_createTitle__1E7jF\",\"createForum\":\"styles_createForum__1Xwta\",\"createInputContainer\":\"styles_createInputContainer__3KEWx\",\"inputLabel\":\"styles_inputLabel__1M894\",\"createInput\":\"styles_createInput__3n3TP\",\"errorMsg\":\"styles_errorMsg__yUuIj\",\"loadingMsg\":\"styles_loadingMsg__2On4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderColor\":\"#e8e8e8\",\"secondaryFontColor\":\"#999\",\"primaryFontColor\":\"#000\",\"backShade\":\"#f9f9f9\",\"smallBP\":\"(max-width: 768px)\",\"container\":\"styles_container__2uHjJ\",\"readOnlyContainer\":\"styles_readOnlyContainer__2C4vO\",\"editorContainer\":\"styles_editorContainer__3F-dj\",\"readOnlyEditorContainer\":\"styles_readOnlyEditorContainer__14ADF\",\"buttonClass\":\"styles_buttonClass__TkIjr\",\"newDiscussion\":\"styles_newDiscussion__3O9MQ\",\"controlsContainer\":\"styles_controlsContainer__1vVdw\",\"controls\":\"styles_controls__hwMJC\",\"controlButton\":\"styles_controlButton__111iW\",\"controlButtonActive\":\"styles_controlButtonActive__vhQcu\",\"editorBlockquoteStyle\":\"styles_editorBlockquoteStyle__Hw_15\",\"editorCodeStyle\":\"styles_editorCodeStyle__3CdMh\",\"editorH1Style\":\"styles_editorH1Style__1fF7S\",\"editorH2Style\":\"styles_editorH2Style__1lX9x\",\"editorH3Style\":\"styles_editorH3Style__2oMEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderColor\":\"#e8e8e8\",\"secondaryFontColor\":\"#999\",\"primaryFontColor\":\"#000\",\"smallBP\":\"(max-width: 768px)\",\"container\":\"styles_container__1bHvf\",\"infoContainer\":\"styles_infoContainer__3wspi\",\"columnOnSmallBP\":\"styles_columnOnSmallBP__cLdkW\",\"dateInfo\":\"styles_dateInfo__2aqF0\",\"userInfo\":\"styles_userInfo__28H9h\",\"name\":\"styles_name__1L6ry\",\"gitHandler\":\"styles_gitHandler__3xGA4\",\"gitIcon\":\"styles_gitIcon__2vsWT\",\"avatar\":\"styles_avatar__1ZB-I\",\"discTitle\":\"styles_discTitle__2dSvS\",\"discContent\":\"styles_discContent__2Wd2W\",\"discFooter\":\"styles_discFooter__1M1Tt\",\"tags\":\"styles_tags__3fywo\",\"favoriteButton\":\"styles_favoriteButton__bm0o-\",\"deleteButton\":\"styles_deleteButton__2IelD\",\"deletingDiscussion\":\"styles_deletingDiscussion__7PXgg\"};","export const UPDATECURRENTFORUM = 'update_current_forum';\r\n\r\nexport const START_FETCHING_FORUMS = 'start_fetching_forums';\r\nexport const STOP_FETCHING_FORUMS = 'stop_fetching_forums';\r\nexport const FETCHING_FORUMS_SUCCESS = 'fetching_forums_success';\r\nexport const FETCHING_FORUMS_FAILURE = 'fetching_forums_failure';\r\n\r\nexport const START_FETCHING_USER = 'start_fetching_user';\r\nexport const FETCHING_USER_SUCCESS = 'fetching_user_success';\r\nexport const FETCHING_USER_FAILURE = 'fetching_user_failure';\r\nexport const SIGNOUT_USER_SUCCESS = 'signOut_user_success';\r\nexport const SIGNOUT_USER_FAILURE = 'signOut_user_failure';\r\n\r\n\r\nexport const START_FETCHING_NETWORK_STATUS = 'start_fetching_network_status';\r\nexport const STOP_FETCHING_NETWORK_STATUS = 'stop_fetching_network_status';\r\nexport const FETCHING_NETWORK_STATUS_SUCCESS = 'fetching_network_status_success';\r\nexport const FETCHING_NETWORK_STATUS_FAILURE = 'fetching_network_status_failure';\r\n","import {\r\n  START_FETCHING_FORUMS,\r\n  STOP_FETCHING_FORUMS,\r\n  FETCHING_FORUMS_SUCCESS,\r\n  FETCHING_FORUMS_FAILURE,\r\n  UPDATECURRENTFORUM,\r\n  START_FETCHING_USER,\r\n  FETCHING_USER_SUCCESS,\r\n  FETCHING_USER_FAILURE,\r\n  START_FETCHING_NETWORK_STATUS,\r\n  STOP_FETCHING_NETWORK_STATUS,\r\n  FETCHING_NETWORK_STATUS_FAILURE,\r\n  FETCHING_NETWORK_STATUS_SUCCESS,\r\n} from './constants';\r\n\r\nconst initialState = {\r\n  fetchingForums: false,\r\n  forums: null,\r\n  currentForum: 'general',\r\n  error: false,\r\n};\r\n\r\n/**\r\n * reducer for top level app state\r\n */\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case START_FETCHING_FORUMS:\r\n      return Object.assign({}, state, {\r\n        fetchingForums: true,\r\n      });;\r\n\r\n    case STOP_FETCHING_FORUMS:\r\n      return Object.assign({}, state, {\r\n        fetchingForums: false,\r\n      });;\r\n\r\n    case FETCHING_FORUMS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        forums: action.payload,\r\n        fetchingForums: false,\r\n        error: false,\r\n      });\r\n\r\n    case FETCHING_FORUMS_FAILURE:\r\n      return Object.assign({}, state, {\r\n        fetchingForums: false,\r\n        error: 'Unable to fetch forums',\r\n      });\r\n\r\n    case UPDATECURRENTFORUM:\r\n      return Object.assign({}, state, {\r\n        currentForum: action.payload,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\nconst initialNetworkStatusState = {\r\n  fetchingNetworkStatus: false,\r\n  networkStatus: null,\r\n  error: false,\r\n};\r\n\r\n/**\r\n * reducer for top level app state\r\n */\r\nexport const networkStatusReducer = (state = initialNetworkStatusState, action) => {\r\n  switch (action.type) {\r\n    case START_FETCHING_NETWORK_STATUS:\r\n      return Object.assign({}, state, {\r\n        fetchingNetworkStatus: true,\r\n      });;\r\n\r\n    case STOP_FETCHING_NETWORK_STATUS:\r\n      return Object.assign({}, state, {\r\n        fetchingNetworkStatus: false,\r\n      });;\r\n\r\n    case FETCHING_NETWORK_STATUS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        networkStatus: true,\r\n        fetchingNetworkStatus: false,\r\n        error: false,\r\n      });\r\n\r\n    case FETCHING_NETWORK_STATUS_FAILURE:\r\n      return Object.assign({}, state, {\r\n        networkStatus:false,\r\n        fetchingNetworkStatus: false,\r\n        error: 'Unable to fetch networkStatus',\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n/**\r\n * reducer for user\r\n */\r\nconst initialUserState = {\r\n  fetchingUser: true,\r\n  authenticated: false,\r\n  error: null,\r\n  _id: null,\r\n  name: null,\r\n  email: null,\r\n  username: null,\r\n  avatarUrl: null,\r\n  githubUrl: null,\r\n  githubLocation: null,\r\n  githubBio: null,\r\n  role: null,\r\n};\r\n\r\nexport const userReducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case START_FETCHING_USER:\r\n      return Object.assign({}, state, {\r\n        fetchUser: true,\r\n      });\r\n\r\n    case FETCHING_USER_SUCCESS:\r\n      const {\r\n        _id,\r\n        name,\r\n        username,\r\n        avatarUrl,\r\n        email,\r\n        githubBio,\r\n        githubUrl,\r\n        githubLocation,\r\n        role,\r\n      } = action.payload;\r\n\r\n      return Object.assign({}, state), {\r\n        fetchingUser: false,\r\n        authenticated: true,\r\n        error: null,\r\n        _id,\r\n        name,\r\n        username,\r\n        avatarUrl,\r\n        email,\r\n        githubBio,\r\n        githubUrl,\r\n        githubLocation,\r\n        role,\r\n      };\r\n\r\n    case FETCHING_USER_FAILURE:\r\n      return Object.assign({}, initialUserState, {\r\n        fetchingUser: false,\r\n        error: 'Unable to fetch user!',\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const START_FETCHING_DISCUSSIONS = 'start_fetching_discussions';\r\nexport const STOP_FETCHING_DISCUSSIONS = 'stop_fetching_discussions';\r\nexport const FETCHING_DISCUSSIONS_SUCCESS = 'fetching_discussions_success';\r\nexport const FETCHING_DISCUSSIONS_FAILURE = 'fetching_discussions_failure';\r\n\r\nexport const START_FETCHING_PINNED_DISCUSSIONS = 'start_fetching_pinned_discussions';\r\nexport const STOP_FETCHING_PINNED_DISCUSSIONS = 'stop_fetching_pinned_discussions';\r\nexport const FETCHING_PINNED_DISCUSSIONS_SUCCESS = 'fetching_pinned_discussions_success';\r\nexport const FETCHING_PINNED_DISCUSSIONS_FAILURE = 'fetching_pinned_discussions_failure';\r\n\r\nexport const UPDATE_SORTING_METHOD = 'update_sorting_method';\r\nexport const INVALID_FORUM = 'invalid_forum';\r\n","import {\r\n  START_FETCHING_DISCUSSIONS,\r\n  STOP_FETCHING_DISCUSSIONS,\r\n  FETCHING_DISCUSSIONS_SUCCESS,\r\n  FETCHING_DISCUSSIONS_FAILURE,\r\n\r\n  START_FETCHING_PINNED_DISCUSSIONS,\r\n  STOP_FETCHING_PINNED_DISCUSSIONS,\r\n  FETCHING_PINNED_DISCUSSIONS_SUCCESS,\r\n  FETCHING_PINNED_DISCUSSIONS_FAILURE,\r\n\r\n  UPDATE_SORTING_METHOD,\r\n  INVALID_FORUM,\r\n} from './constants';\r\n\r\nconst initialState = {\r\n  fetchingDiscussions: true,\r\n  discussions: null,\r\n  fetchingPinnedDiscussions: true,\r\n  pinnedDiscussions: null,\r\n  sortingMethod: 'date',\r\n  error: null,\r\n};\r\n\r\nexport const feedReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case START_FETCHING_DISCUSSIONS:\r\n      return Object.assign({}, state, {\r\n        fetchingDiscussions: true,\r\n        error: null,\r\n      });;\r\n\r\n    case STOP_FETCHING_DISCUSSIONS:\r\n      return Object.assign({}, state, {\r\n        fetchingDiscussions: false,\r\n      });;\r\n\r\n    case FETCHING_DISCUSSIONS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        discussions: action.payload,\r\n        fetchingDiscussions: false,\r\n        error: null,\r\n      });\r\n\r\n    case FETCHING_DISCUSSIONS_FAILURE:\r\n      return Object.assign({}, state, {\r\n        fetchingDiscussions: false,\r\n        error: 'Unable to fetch discussions at the moment.',\r\n      });\r\n\r\n    case START_FETCHING_PINNED_DISCUSSIONS:\r\n      return Object.assign({}, state, {\r\n        fetchingPinnedDiscussions: true,\r\n        error: null,\r\n      });;\r\n\r\n    case STOP_FETCHING_PINNED_DISCUSSIONS:\r\n      return Object.assign({}, state, {\r\n        fetchingPinnedDiscussions: false,\r\n      });;\r\n\r\n    case FETCHING_PINNED_DISCUSSIONS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        pinnedDiscussions: action.payload,\r\n        fetchingPinnedDiscussions: false,\r\n        error: null,\r\n      });\r\n\r\n    case FETCHING_PINNED_DISCUSSIONS_FAILURE:\r\n      return Object.assign({}, state, {\r\n        fetchingPinnedDiscussions: false,\r\n        error: 'Unable to fetch pinned discussions at the moment.',\r\n      });\r\n\r\n\r\n    case UPDATE_SORTING_METHOD:\r\n      return Object.assign({}, state, {\r\n        sortingMethod: action.payload,\r\n      });\r\n\r\n    case INVALID_FORUM:\r\n      return Object.assign({}, state, {\r\n        error: 'Sorry, couldn\\'t find the forum.',\r\n        fetchingPinnedDiscussions: false,\r\n        fetchingDiscussions: false,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCHING_SINGLE_DISC_START = 'fetching_single_discussion_start';\r\nexport const FETCHING_SINGLE_DISC_END = 'fetching_single_discussion_end';\r\nexport const FETCHING_SINGLE_DISC_SUCCESS = 'fetching_single_discussion_success';\r\nexport const FETCHING_SINGLE_DISC_FAILURE = 'fetching_single_discussion_failure';\r\n\r\nexport const TOGGLE_FAVORITE_START = 'toggle_favorite_start';\r\nexport const TOGGLE_FAVORITE_SUCCESS = 'toggle_favorite_success';\r\nexport const TOGGLE_FAVORITE_FAILURE = 'toggle_favorite_failure';\r\n\r\nexport const UPDATE_OPINION_CONTENT = 'update_opinion_content';\r\n\r\nexport const POSTING_OPINION_START = 'posting_opinion_start';\r\nexport const POSTING_OPINION_SUCCESS = 'posting_opinion_success';\r\nexport const POSTING_OPINION_FAILURE = 'posting_opinion_failure';\r\n\r\nexport const DELETE_DISC_START = 'delete_disc_start';\r\nexport const DELETE_DISC_SUCCESS = 'delete_disc_success';\r\nexport const DELETE_DISC_FAILURE = 'delete_disc_failure';\r\nexport const DELETE_DISC_REDIRECT = 'delete_disc_redirect';\r\n\r\nexport const DELETE_OPINION_START = 'delete_opinion_start';\r\nexport const DELETE_OPINION_SUCCESS = 'delete_opinion_success';\r\nexport const DELETE_OPINION_FAILURE = 'delete_opinion_failure';\r\n","import {\r\n  FETCHING_SINGLE_DISC_START,\r\n  FETCHING_SINGLE_DISC_END,\r\n  FETCHING_SINGLE_DISC_SUCCESS,\r\n  FETCHING_SINGLE_DISC_FAILURE,\r\n\r\n  TOGGLE_FAVORITE_START,\r\n  TOGGLE_FAVORITE_SUCCESS,\r\n  TOGGLE_FAVORITE_FAILURE,\r\n\r\n  UPDATE_OPINION_CONTENT,\r\n\r\n  POSTING_OPINION_START,\r\n  POSTING_OPINION_SUCCESS,\r\n  POSTING_OPINION_FAILURE,\r\n\r\n  DELETE_DISC_START,\r\n  DELETE_DISC_SUCCESS,\r\n  DELETE_DISC_FAILURE,\r\n  DELETE_DISC_REDIRECT,\r\n\r\n  DELETE_OPINION_START,\r\n  DELETE_OPINION_SUCCESS,\r\n  DELETE_OPINION_FAILURE,\r\n} from './constants';\r\n\r\nconst initialState = {\r\n  fetchingDiscussion: true,\r\n  toggleingFavorite: false,\r\n  postingOpinion: false,\r\n  opinionContent: null,\r\n  opinionError: null,\r\n  deletingDiscussion: false,\r\n  deletedDiscussion: false,\r\n  deletingOpinion: null,\r\n  discussion: null,\r\n  error: null,\r\n};\r\n\r\nexport const singleDiscussionReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case FETCHING_SINGLE_DISC_START:\r\n      return Object.assign({}, state, {\r\n        fetchingDiscussion: true,\r\n      });\r\n\r\n    case FETCHING_SINGLE_DISC_END:\r\n      return Object.assign({}, state, {\r\n        fetchingDiscussion: false,\r\n      });\r\n\r\n    case FETCHING_SINGLE_DISC_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        discussion: action.payload,\r\n        fetchingDiscussion: false,\r\n        error: null,\r\n      });\r\n\r\n    case FETCHING_SINGLE_DISC_FAILURE:\r\n      return Object.assign({}, state, {\r\n        fetchingDiscussion: false,\r\n        error: 'Unable to fetch discussion. Please check out the url.',\r\n      });\r\n\r\n    case TOGGLE_FAVORITE_START:\r\n      return Object.assign({}, state, {\r\n        toggleingFavorite: true,\r\n      });\r\n\r\n    case TOGGLE_FAVORITE_SUCCESS:\r\n    case TOGGLE_FAVORITE_FAILURE:\r\n      return Object.assign({}, state, {\r\n        toggleingFavorite: false,\r\n      });\r\n\r\n    case UPDATE_OPINION_CONTENT:\r\n      return Object.assign({}, state, {\r\n        opinionContent: action.payload,\r\n      });\r\n\r\n    case POSTING_OPINION_START:\r\n      return Object.assign({}, state, {\r\n        postingOpinion: true,\r\n        opinionError: null,\r\n      });\r\n\r\n    case POSTING_OPINION_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        postingOpinion: false,\r\n        opinionContent: null,\r\n        opinionError: null,\r\n      });\r\n\r\n    case POSTING_OPINION_FAILURE:\r\n      return Object.assign({}, state, {\r\n        postingOpinion: false,\r\n        opinionContent: null,\r\n        opinionError: action.payload,\r\n      });\r\n\r\n    case DELETE_DISC_START:\r\n      return Object.assign({}, state, {\r\n        deletingDiscussion: true,\r\n      });\r\n\r\n    case DELETE_DISC_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        deletingDiscussion: false,\r\n        deletedDiscussion: true,\r\n      });\r\n\r\n    case DELETE_DISC_FAILURE:\r\n      return Object.assign({}, state, {\r\n        deletingDiscussion: false,\r\n        deletedDiscussion: false,\r\n      });\r\n\r\n    case DELETE_DISC_REDIRECT:\r\n      return Object.assign({}, state, {\r\n        deletedDiscussion: false,\r\n      });\r\n\r\n    case DELETE_OPINION_START:\r\n      return Object.assign({}, state, {\r\n        deletingOpinion: action.payload,\r\n      });\r\n\r\n    case DELETE_OPINION_SUCCESS:\r\n    case DELETE_OPINION_FAILURE:\r\n      return Object.assign({}, state, {\r\n        deletingOpinion: null,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const POSTING_DISCUSSION_START = 'posting_discussion_start';\r\nexport const POSTING_DISCUSSION_END = 'posting_discussion_end';\r\nexport const POSTING_DISCUSSION_SUCCESS = 'posting_discussion_success';\r\nexport const POSTING_DISCUSSION_FAILURE = 'posting_discussion_failure';\r\n\r\nexport const UPDATE_DISCUSSION_TITLE = 'update_discussion_title';\r\nexport const UPDATE_DISCUSSION_CONTENT = 'update_discussion_content';\r\nexport const UPDATE_DISCUSSION_PIN_STATUS = 'update_discussion_pin_status';\r\nexport const UPDATE_DISCUSSION_TAGS = 'update_discussion_tags';\r\n\r\nexport const CLEAR_SUCCESS_MESSAGE = 'clear_success_message';\r\n","import {\r\n  POSTING_DISCUSSION_START,\r\n  POSTING_DISCUSSION_SUCCESS,\r\n  POSTING_DISCUSSION_FAILURE,\r\n\r\n  UPDATE_DISCUSSION_TITLE,\r\n  UPDATE_DISCUSSION_CONTENT,\r\n  UPDATE_DISCUSSION_PIN_STATUS,\r\n  UPDATE_DISCUSSION_TAGS,\r\n\r\n  CLEAR_SUCCESS_MESSAGE,\r\n} from './constants';\r\n\r\nconst initialState = {\r\n  postingSuccess: false,\r\n  errorMsg: null,\r\n  postingDiscussion: false,\r\n  title: '',\r\n  content: null,\r\n  tags: [],\r\n  pinned: false,\r\n};\r\n\r\nexport const newDiscussionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case POSTING_DISCUSSION_START:\r\n      return Object.assign({}, state, {\r\n        postingDiscussion: true,\r\n      });\r\n\r\n    case POSTING_DISCUSSION_SUCCESS:\r\n      return Object.assign({}, initialState, {\r\n        postingSuccess: true,\r\n        postingDiscussion: false,\r\n        errorMsg: null,\r\n      });\r\n\r\n    case POSTING_DISCUSSION_FAILURE:\r\n      return Object.assign({}, state, {\r\n        postingSuccess: false,\r\n        postingDiscussion: false,\r\n        errorMsg: action.payload || 'Unable to post discussion.',\r\n      });\r\n\r\n    case CLEAR_SUCCESS_MESSAGE:\r\n      return Object.assign({}, initialState, {\r\n        postingSuccess: false,\r\n      });\r\n\r\n    case UPDATE_DISCUSSION_TITLE:\r\n      return Object.assign({}, state, {\r\n        title: action.payload,\r\n      });\r\n\r\n    case UPDATE_DISCUSSION_CONTENT:\r\n      return Object.assign({}, state, {\r\n        content: action.payload,\r\n      });\r\n\r\n    case UPDATE_DISCUSSION_PIN_STATUS:\r\n      return Object.assign({}, state, {\r\n        pinned: action.payload,\r\n      });\r\n\r\n    case UPDATE_DISCUSSION_TAGS:\r\n      return Object.assign({}, state, {\r\n        tags: action.payload,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_ALL_INFO_START = 'get_all_info_start';\r\nexport const GET_ALL_INFO_SUCCESS = 'get_all_info_success';\r\nexport const GET_ALL_INFO_FAILURE = 'get_all_info_failure';\r\n\r\nexport const CREATE_FORUM = 'create_forum';\r\nexport const CREATE_FORUM_SUCCESS = 'create_forum_success';\r\nexport const CREATE_FORUM_FAILURE = 'create_forum_failure';\r\n\r\nexport const DELETE_FORUM = 'delete_forum';\r\nexport const DELETE_FORUM_SUCCESS = 'delete_forum_success';\r\nexport const DELETE_FORUM_FAILURE = 'delete_forum_failure';\r\nexport const FETCHING_DISCUSSIONS_FAILURE = 'fetching_discussions_failure';\r\n","import {\r\n  GET_ALL_INFO_START,\r\n  GET_ALL_INFO_SUCCESS,\r\n  GET_ALL_INFO_FAILURE,\r\n\r\n  CREATE_FORUM,\r\n  CREATE_FORUM_SUCCESS,\r\n  CREATE_FORUM_FAILURE,\r\n\r\n  DELETE_FORUM,\r\n  DELETE_FORUM_SUCCESS,\r\n  DELETE_FORUM_FAILURE,\r\n} from './constants';\r\n\r\nconst initialState = {\r\n  loadingInfo: false,\r\n  info: {\r\n    discussionCount: 0,\r\n    opinionCount: 0,\r\n    forumCount: 0,\r\n    userCount: 0,\r\n    forums: [],\r\n  },\r\n  error: null,\r\n\r\n  creatingForum: false,\r\n  creatingForumError: null,\r\n\r\n  deletingForum: false,\r\n  deletingForumError: null,\r\n};\r\n\r\nexport const adminInfoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_INFO_START:\r\n      return Object.assign({}, state, {\r\n        loadingInfo: true,\r\n        error: null,\r\n      });\r\n\r\n    case GET_ALL_INFO_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        loadingInfo: false,\r\n        info: action.payload,\r\n        error: null,\r\n      });\r\n\r\n    case GET_ALL_INFO_FAILURE:\r\n      return Object.assign({}, state, {\r\n        loadingInfo: false,\r\n        error: 'Something went wrong while loading admin level information.',\r\n      });\r\n\r\n    case CREATE_FORUM:\r\n      return Object.assign({}, state, {\r\n        creatingForumError: null,\r\n        creatingForum: true,\r\n      });\r\n\r\n    case CREATE_FORUM_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        creatingForum: false,\r\n        creatingForumError: null,\r\n      });\r\n\r\n    case CREATE_FORUM_FAILURE:\r\n      return Object.assign({}, state, {\r\n        creatingForum: false,\r\n        creatingForumError: 'Something went wrong while trying to create the forum. Please try again. Also check out if the forum already exists.',\r\n      });\r\n\r\n    case DELETE_FORUM:\r\n      return Object.assign({}, state, {\r\n        deletingForum: true,\r\n        deletingForumError: null,\r\n      });\r\n\r\n    case DELETE_FORUM_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        deletingForum: false,\r\n        deletingForumError: null,\r\n      });\r\n\r\n    case DELETE_FORUM_FAILURE:\r\n      return Object.assign({}, state, {\r\n        deletingForum: false,\r\n        deletingForumError: 'Something went wrong while trying to delete the forum. Please try again later.',\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_USER_PROFILE_START = 'fetch_user_profile_start';\r\nexport const FETCH_USER_PROFILE_SUCCESS = 'fetch_user_profile_success';\r\nexport const FETCH_USER_PROFILE_FAILURE = 'fetch_user_profile_failure';\r\n","import {\r\n  FETCH_USER_PROFILE_START,\r\n  FETCH_USER_PROFILE_SUCCESS,\r\n  FETCH_USER_PROFILE_FAILURE,\r\n} from './constants';\r\n\r\nconst initialState = {\r\n  fetchingProfile: true,\r\n  profile: {},\r\n  error: null,\r\n};\r\n\r\nexport const userProfileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER_PROFILE_START:\r\n      return Object.assign({}, state, {\r\n        fetchingProfile: true,\r\n        error: null,\r\n      });\r\n\r\n    case FETCH_USER_PROFILE_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        fetchingProfile: false,\r\n        profile: action.payload,\r\n        error: null,\r\n      });\r\n\r\n    case FETCH_USER_PROFILE_FAILURE:\r\n      return Object.assign({}, state, {\r\n        fetchingProfile: false,\r\n        error: 'Unable to fetch user profile. Please check out for correct username.',\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { appReducer, userReducer,networkStatusReducer } from './reducers';\r\nimport { feedReducer } from '../Views/ForumFeed/reducers';\r\nimport { singleDiscussionReducer } from '../Views/SingleDiscussion/reducers';\r\nimport { newDiscussionReducer } from '../Views/NewDiscussion/reducers';\r\nimport { adminInfoReducer } from '../Views/AdminDashboard/reducers';\r\nimport { userProfileReducer } from '../Views/UserProfile/reducers';\r\n\r\n// root reducer for app\r\nconst rootReducer = combineReducers({\r\n  networkStatus: networkStatusReducer,\r\n  user: userReducer,\r\n  app: appReducer,\r\n  feed: feedReducer,\r\n  discussion: singleDiscussionReducer,\r\n  newDiscussion: newDiscussionReducer,\r\n  adminInfo: adminInfoReducer,\r\n  userProfile: userProfileReducer,\r\n});\r\n\r\n// dev tool extension\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// application store\r\nlet store = createStore(\r\n  rootReducer,\r\n  /* preloaded state, */\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n\r\nexport default store;\r\n","\r\nexport default {\r\n    url:'http://testwx.ouhaibank.com:8080'    \r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const {\r\n      type,\r\n      fullWidth,\r\n      noUppercase,\r\n      className,\r\n      style,\r\n      onClick,\r\n      alwaysActive,\r\n    } = this.props;\r\n\r\n    return (\r\n      <button\r\n        onClick={onClick}\r\n        className={classnames(\r\n          styles.button,\r\n          styles.buttonDefaults,\r\n          styles[type],\r\n          fullWidth && styles.fullWidth,\r\n          noUppercase && styles.noUppercase,\r\n          alwaysActive && styles.alwaysActive,\r\n          className\r\n        )}\r\n        style={style}\r\n      >\r\n        {this.props.children}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.defaultProps = {\r\n  type: 'default',\r\n  fullWidth: false,\r\n  noUppercase: false,\r\n  alwaysActive: false,\r\n  className: '',\r\n  style: {},\r\n  onClick: () => { },\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf(['default', 'outline']),\r\n  fullWidth: PropTypes.bool,\r\n  noUppercase: PropTypes.bool,\r\n  alwaysActive: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","var storage={\r\n\r\n    set(key, value){//增加\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    },\r\n    get(key){//获取\r\n        return JSON.parse(localStorage.getItem(key));\r\n    },\r\n    remove(key){//删除\r\n        localStorage.removeItem(key);\r\n    }\r\n};\r\n\r\nexport default storage;\r\n","const charTable=[\r\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\r\n    'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\r\n    'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',\r\n    'Y', 'Z', '2', '3', '4', '5', '6', '7',\r\n    '='\r\n  ],allowedPeddingCount=[6,4,3,1,0];\r\n  \r\n  function str_split(str,length){\r\n    if(typeof str !== 'string')return [];\r\n    let a=[],i=0;\r\n    length||(length=1);\r\n    do{\r\n        a.push(str.substr(i,length));\r\n        i+=length;\r\n    }while(i<str.length);\r\n    return a;\r\n  }\r\n  \r\nexport default {\r\n    encode:function(str,padding){\r\n        if(!str)return '';\r\n        let binaryString='';\r\n        for (let i = 0;i<str.length;i++) {\r\n            let bin=str.charCodeAt(i).toString(2);\r\n            binaryString+=('0'.repeat(8-bin.length)+bin);\r\n        }\r\n        let fiveBitBinaryArray=str_split(binaryString,5),base32='';\r\n        for(let i=0;i<fiveBitBinaryArray.length;i++){\r\n            let bin=fiveBitBinaryArray[i];\r\n            base32+=charTable[parseInt(bin+'0'.repeat(5-bin.length),2)];\r\n        }\r\n        let x=binaryString.length%40;\r\n        if (padding && x != 0) {\r\n            if (x == 8)base32+=charTable[32].repeat(6);\r\n            else if(x===16)base32+=charTable[32].repeat(4);\r\n            else if(x===24)base32+=charTable[32].repeat(3);\r\n            else if(x===32)base32+=charTable[32];\r\n        }\r\n        return base32;\r\n    },\r\n    decode:function(str){\r\n        if(!str)return '';\r\n        let paddingMatch=str.match(/\\=+$/),\r\n            paddingCharCount=paddingMatch?paddingMatch[0].length:0;\r\n        if(allowedPeddingCount.indexOf(paddingCharCount)<0)return false;\r\n        for (let i=0;i<4;i++){\r\n            if (paddingCharCount===allowedPeddingCount[i] \r\n                && str.substr(-(allowedPeddingCount[i]))!=charTable[32].repeat(allowedPeddingCount[i]))\r\n                return false;\r\n        }\r\n        str=str.replace(/\\=+$/,'');\r\n        let binaryString = \"\";\r\n        for (let i=0;i<str.length;i+=8) {\r\n            let x='';\r\n            if (charTable.indexOf(str[i])<0)return false;\r\n            for (let j=0;j<8;j++) {\r\n                let bin=charTable.indexOf(str[i+j]).toString(2);\r\n                x+='0'.repeat(5-bin.length)+bin;\r\n            }\r\n            let eightBits=str_split(x,8);\r\n            for (let z = 0; z < eightBits.length; z++) {\r\n                let y,cd=parseInt(eightBits[z],2,10);\r\n                binaryString+=((y=String.fromCharCode(cd))||cd==48)?y:\"\";\r\n            }\r\n        }\r\n        return binaryString;\r\n    }\r\n  }","import axios from 'axios';\r\nimport Base32 from '../util/base32.js'\r\nimport env from '../env.js'\r\nimport storage from './storage.js';\r\nconst keccak256 = require('keccak256');\r\n\r\nexport const fetchForums = (forum_id) => {\r\n  return axios.get(env.url+'/api/forum');\r\n};\r\n\r\nexport const fetchUser = () => {\r\n  var accessString = storage.get('token');\r\n  return axios.get(env.url+'/api/user/getUser',{\r\n    headers: { Authorization: `bearer ${accessString}` },\r\n  });\r\n};\r\n\r\nexport const fetchNetworkStatus = () => {\r\n  return axios.get(env.url+'/api/getNetworkStatus',{timeout:2000});\r\n};\r\nexport const fetchForumsIpfs = () => {\r\n  \r\n  let forumTable = JSON.stringify({url:\"/api/forum\"});\r\n  let hashCode = keccak256(forumTable).toString('hex');\r\n  return axios.get(hashCode+\".json\");\r\n};","import _ from 'lodash';\r\nimport {\r\n  START_FETCHING_FORUMS,\r\n  STOP_FETCHING_FORUMS,\r\n  FETCHING_FORUMS_SUCCESS,\r\n  FETCHING_FORUMS_FAILURE,\r\n  UPDATECURRENTFORUM,\r\n  START_FETCHING_USER,\r\n  FETCHING_USER_SUCCESS,\r\n  FETCHING_USER_FAILURE,\r\n  START_FETCHING_NETWORK_STATUS,\r\n  FETCHING_NETWORK_STATUS_FAILURE,\r\n  FETCHING_NETWORK_STATUS_SUCCESS\r\n} from './constants';\r\nimport {\r\n  fetchForums,\r\n  fetchUser,\r\n  signOut,\r\n  fetchNetworkStatus,\r\n  fetchForumsIpfs,\r\n} from './api';\r\nimport { networkStatusReducer } from './reducers';\r\n\r\n/**\r\n * get all forum list\r\n * @return {action}\r\n */\r\nexport const getForums = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: START_FETCHING_FORUMS });\r\n    var networkStatus = getState().networkStatus;\r\n    if (networkStatus.networkStatus==true){\r\n      fetchForums().then(\r\n        data => dispatch({ type: FETCHING_FORUMS_SUCCESS, payload: data.data }),\r\n        error => dispatch({ type: FETCHING_FORUMS_FAILURE })\r\n      );\r\n    }else{\r\n      fetchForumsIpfs().then(\r\n        data => dispatch({ type: FETCHING_FORUMS_SUCCESS, payload: data.data }),\r\n        error => dispatch({ type: FETCHING_FORUMS_FAILURE })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const getNetworkStatus = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: START_FETCHING_NETWORK_STATUS });\r\n\r\n    fetchNetworkStatus().then(\r\n      data => dispatch({ type: FETCHING_NETWORK_STATUS_SUCCESS, payload: data }),\r\n      error => dispatch({ type: FETCHING_NETWORK_STATUS_FAILURE })\r\n    );\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * update current forum when route change occurs\r\n * @param  {String} currentForum\r\n * @return {action}\r\n */\r\nexport const updateCurrentForum = (currentForum) => {\r\n  return {\r\n    type: UPDATECURRENTFORUM,\r\n    payload: currentForum,\r\n  };\r\n};\r\n\r\n/**\r\n * get the current user from server\r\n * @return {action}\r\n */\r\nexport const getUser = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: START_FETCHING_USER });\r\n\r\n    fetchUser().then(\r\n      data => {\r\n        if (!data.data._id) dispatch({ type: FETCHING_USER_FAILURE });\r\n        else dispatch({ type: FETCHING_USER_SUCCESS, payload: data.data });\r\n      },\r\n      error => dispatch({ type: FETCHING_USER_FAILURE })\r\n    );\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link, hashHistory } from 'react-router';\r\nimport classnames from 'classnames';\r\nimport onClickOutside from 'react-onclickoutside';\r\nimport styles from './styles';\r\nimport { signIn, signout } from './api';\r\nimport env from '../../../env.js';\r\nimport CustomButton from 'Components/Button';\r\nimport storage from '../../../App/storage';\r\nimport store from '../../../App/store.js';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport Popover from '@material-ui/core/Popover';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\n\r\n// import { Form, Icon, Input, Button as AntButton, Checkbox } from 'antd';\r\n\r\nimport { getForums, updateCurrentForum, getUser, getNetworkStatus } from '../../../App/actions';\r\n\r\nclass UserMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeSubMenu: false, subMenuStatus: 'signUp', username: '', password: '', anchorEl: null,snackbarOpen:false };\r\n    this.toggleSubMenu = this.toggleSubMenu.bind(this);\r\n    this.toggleSignUpMenu = this.toggleSignUpMenu.bind(this);\r\n    this.userNameHandleChange = this.userNameHandleChange.bind(this);\r\n    this.passwordHandleChange = this.passwordHandleChange.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n    this.signoutClick = this.signoutClick.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.gotoProfile = this.gotoProfile.bind(this);\r\n    this.snackbarClose = this.snackbarClose.bind(this);\r\n  }\r\n  snackbarClose(){\r\n    this.snackbarClose = false;\r\n  }\r\n  handleClose() {\r\n\r\n    this.setState({ activeSubMenu: false });\r\n  }\r\n  // handleClickOutside() {\r\n  //   this.setState({ activeSubMenu: false });\r\n  // }\r\n\r\n  toggleSubMenu(event) {\r\n    var currentTarget = event.currentTarget;\r\n    this.setState((prevState) => {\r\n      return {\r\n        activeSubMenu: !prevState.activeSubMenu,\r\n        subMenuStatus: 'signIn',\r\n        anchorEl: currentTarget\r\n      };\r\n    });\r\n  }\r\n  toggleSignUpMenu() {\r\n    this.setState((prevState) => {\r\n      return {\r\n        activeSubMenu: !prevState.activeSubMenu,\r\n        subMenuStatus: 'signUp'\r\n      };\r\n    });\r\n  }\r\n  userNameHandleChange(event) {\r\n    this.setState({ username: event.target.value });\r\n  }\r\n  passwordHandleChange(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n  submit() {\r\n    var that = this;\r\n    signIn({ username: this.state.username, password: this.state.password }).then(\r\n      data => {\r\n        if (data.data.error != null) {    \r\n          enqueueSnackbar('This is a success message!', 'error');\r\n\r\n        } else {\r\n          storage.set('token', data.data);\r\n          store.dispatch(getUser());\r\n        }\r\n      },\r\n      error => {\r\n      }\r\n    );\r\n  }\r\n  signoutClick() {\r\n    storage.set('token', '');\r\n    store.dispatch(getUser());\r\n    this.setState({ activeSubMenu: false });\r\n  }\r\n  gotoProfile(){\r\n    const {\r\n      signedIn,\r\n      gitHandler,\r\n    } = this.props;\r\n    hashHistory.push(`/user/${gitHandler}`);\r\n  }\r\n  renderSubMenu() {\r\n    const { activeSubMenu, subMenuStatus,\r\n      username,\r\n      password,\r\n      anchorEl } = this.state;\r\n    const {\r\n      signedIn,\r\n      gitHandler,\r\n    } = this.props;\r\n\r\n    if (activeSubMenu) {\r\n      return (\r\n        <div className={styles.subMenu}>\r\n          { !signedIn &&\r\n            <Dialog\r\n              onClose={this.handleClose}\r\n              open\r\n              aria-labelledby=\"simple-dialog\"\r\n            >\r\n              <DialogTitle id=\"simple-dialog-tilte\">Sign In/Sign up</DialogTitle>\r\n              <DialogContent>\r\n                <Avatar style={{ margin: '0 auto', backgroundColor: '#dc004e' }}>\r\n                  <LockOutlinedIcon />\r\n                </Avatar>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  autoFocus\r\n                  value={username} onChange={this.userNameHandleChange}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={password} onChange={this.passwordHandleChange}\r\n                />\r\n                <Button\r\n                  style={{ marginTop: '20px' }}\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.submit}\r\n                >\r\n                  Submit!\r\n              </Button>\r\n                <Button\r\n                  style={{ marginTop: '20px' }}\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  onClick={this.handleClose}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </DialogContent>\r\n\r\n            </Dialog>\r\n          }\r\n          { signedIn && <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={this.handleClose}\r\n          >\r\n            <MenuItem onClick={this.gotoProfile}>My Profile</MenuItem>\r\n            <MenuItem onClick={this.signoutClick}>Sign Out</MenuItem>\r\n          </Menu>}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      signedIn,\r\n      userName,\r\n      avatar,\r\n      signOutAction,\r\n    } = this.props;\r\n\r\n    if (signedIn) {\r\n      return (\r\n        <div style={{ position: 'relative' }}>\r\n          <div className={styles.container} onClick={this.toggleSubMenu}>\r\n            {/* <img className={styles.userAvatar} src={avatar} alt={`${userName} Avatar`} /> */}\r\n            <span className={styles.title}>{userName}</span>\r\n          </div>\r\n          {this.renderSubMenu()}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <CustomButton\r\n          alwaysActive\r\n          className={classnames(styles.signInBtn, styles.title)}\r\n          onClick={this.toggleSignUpMenu}\r\n          style={{ justifyContent: 'flex-end' }}\r\n        >\r\n          Sign Up / Sign In\r\n        </CustomButton>\r\n        \r\n        {/*         \r\n        <CustomButton\r\n          alwaysActive\r\n          className={classnames(styles.signInBtn, styles.title)}\r\n          onClick={this.toggleSubMenu}\r\n          style={{justifyContent:'flex-start'}}\r\n          // style={{alignItems:'flex-start'}}\r\n        >\r\n           \r\n        </CustomButton> */}\r\n\r\n        {this.renderSubMenu()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUserMenu.defaultProps = {\r\n  signedIn: false,\r\n  userName: '',\r\n  gitHandler: '',\r\n  avatar: '',\r\n};\r\n\r\nUserMenu.propTypes = {\r\n  signedIn: PropTypes.bool.isRequired,\r\n  userName: PropTypes.string,\r\n  gitHandler: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n};\r\n\r\nexport default UserMenu;\r\n","import axios from 'axios';\r\nimport env from '../../../env.js';\r\n\r\nexport const signIn = (data) => {\r\n  return axios.post(env.url+'/api/user/signIn', data);\r\n};\r\n\r\nexport const signout = () => {\r\n  return axios.get(env.url+'/api/user/signout');\r\n};\r\n","import React, { Component } from 'react';\r\nimport styles from './styles';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className={styles.logoContainer}>\r\n      <div className={styles.logo}>\r\n        <svg viewBox=\"0 0 100 100\"xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g id=\"Group\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n            <path d=\"M51.1388842,81.5721454 L69.5667388,100 L92.0066458,100 C96.4114635,100 100,96.4212534 100,92.0066458 L100,7.99335421 C100,3.58853654 96.4212534,0 92.0066458,0 L7.99335421,0 C3.58853654,0 0,3.57874658 0,7.99335421 L0,92.0066458 C0,96.4114635 3.57874658,100 7.99335421,100 L10.5882353,100 L10.5882353,44.7058824 C10.7474244,24.5366987 27.1464843,8.23529412 47.3529412,8.23529412 C67.6575276,8.23529412 84.1176471,24.6954136 84.1176471,45 C84.1176471,64.0263195 69.6647717,79.676989 51.1388842,81.5721454 Z M24.2232146,73.5788183 L24.1176471,73.6843859 L50.4332612,100 L24.1176471,100 L24.1176471,73.4929507 C24.1527823,73.521637 24.1879715,73.5502596 24.2232146,73.5788183 Z\" id=\"Combined-Shape\" fill=\"#F1C40F\"></path>\r\n            <circle id=\"Oval\" fill=\"#F1C40F\" cx=\"47.6470588\" cy=\"45.2941176\" r=\"23.5294118\"></circle>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n      <div className={styles.logoTitle}>ReForum-ipfs</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from 'react';\r\nimport { Link, IndexLink } from 'react-router';\r\nimport classnames from 'classnames';\r\nimport _ from 'lodash';\r\nimport styles from './styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass NavigationBar extends Component {\r\n  render() {\r\n    const {\r\n      navigationLinks,\r\n    } = this.props;\r\n\r\n    if (navigationLinks) {\r\n      return (\r\n        <ul className={styles.navigationBar}>\r\n          { navigationLinks.map(link => {\r\n            if (link.id === 0) {\r\n              return (\r\n                <li key={_.uniqueId('navLink_')}>\r\n                  <IndexLink\r\n                    className={styles.links}\r\n                    activeClassName={styles.linkActive}\r\n                    to='/'\r\n                  >\r\n                    Home\r\n                  </IndexLink>\r\n                </li>\r\n              );\r\n            }\r\n\r\n            return (\r\n              <li key={_.uniqueId('navLink_')}>\r\n                <Link\r\n                  className={styles.links}\r\n                  activeClassName={styles.linkActive}\r\n                  to={link.link}\r\n                >\r\n                  {link.name}\r\n                </Link>\r\n              </li>\r\n            );\r\n          }) }\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nNavigationBar.defaultProps = {\r\n  navigationLinks: [\r\n    {\r\n      id: 0,\r\n      name: 'General',\r\n      link: '/',\r\n    },\r\n  ],\r\n};\r\n\r\nNavigationBar.propTypes = {\r\n  navigationLinks: PropTypes.array,\r\n};\r\n\r\nexport default NavigationBar;\r\n","export default __webpack_public_path__ + \"static/media/placeholder.4d0400d6.jpg\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nimport appLayout from 'SharedStyles/appLayout';\r\nimport styles from './styles';\r\n\r\n// components for Header\r\nimport UserMenu from 'Components/Header/UserMenu';\r\nimport Logo from 'Components/Header/Logo';\r\nimport NavigationBar from 'Components/Header/NavigationBar';\r\nimport PlaceholderImage from 'SharedStyles/placeholder.jpg';\r\n\r\nclass Header extends Component {\r\n  renderNavLinks() {\r\n    const { forums } = this.props;\r\n\r\n    if (forums) {\r\n      return forums.map((forum) => {\r\n        return {\r\n          id: forum._id,\r\n          name: forum.forum_name,\r\n          link: `/${forum.forum_slug}`,\r\n        };\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      authenticated,\r\n      name,\r\n      username,\r\n      avatarUrl,\r\n    } = this.props.user;\r\n\r\n    return (\r\n      <div className={classnames(appLayout.constraintWidth)}>\r\n        <div className={styles.headerTop}>\r\n          <Logo />\r\n          <UserMenu\r\n            signedIn={authenticated}\r\n            userName={name || username}\r\n            gitHandler={username}\r\n            avatar={avatarUrl}\r\n          />\r\n        </div>\r\n        <NavigationBar\r\n          navigationLinks={this.renderNavLinks()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => { return {\r\n    user: state.user,\r\n    forums: state.app.forums,\r\n  }; }\r\n)(Header);\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport styles from './styles';\r\nimport appLayout from 'SharedStyles/appLayout';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classnames(appLayout.constraintWidth, styles.contentArea)}>\r\n        {/* Copyright? Who cares? :-) */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nFooter.defaultProps = {\r\n};\r\n\r\nFooter.propTypes = {\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport Header from 'Containers/Header';\r\nimport Footer from 'Components/Footer';\r\nimport appLayout from 'SharedStyles/appLayout';\r\nimport styles from './styles';\r\n\r\nimport { getForums, updateCurrentForum, getUser,getNetworkStatus } from './actions';\r\n\r\nclass AppContainer extends Component {\r\n  componentDidMount() {\r\n    const {\r\n      params,\r\n      updateCurrentForum,\r\n      getForums,\r\n      getUser,\r\n      getNetworkStatus,\r\n    } = this.props;\r\n\r\n    getNetworkStatus();\r\n\r\n\r\n    setTimeout(function(){\r\n      // get all forum list\r\n      getForums();\r\n\r\n      // check for authenticated user\r\n      getUser();\r\n\r\n      // set current forum based on route\r\n      const currentForum = params.forum || '';\r\n      updateCurrentForum(currentForum);\r\n    },2000)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      forums,\r\n      params,\r\n      currentForum,\r\n      updateCurrentForum,\r\n    } = this.props;\r\n\r\n    let newCurrentForum = '';\r\n    if (params.forum) newCurrentForum = params.forum;\r\n    else if (forums) newCurrentForum = forums[0].forum_slug;\r\n\r\n    // update current forum if necessery\r\n    if (newCurrentForum !== currentForum) updateCurrentForum(newCurrentForum);\r\n  }\r\n\r\n  render() {\r\n    const { forums } = this.props;\r\n\r\n    // render only if we get the forum lists\r\n    if (forums) {\r\n      return (\r\n        <div>\r\n          <Helmet><title> </title></Helmet>\r\n\r\n          <div className={styles.gitForkTag}>\r\n            <a className={styles.gitLink} href=\"https://github.com/ReForum-ipfs/ReForum-ipfs\" target=\"_blank\">Fork on Github</a>\r\n          </div>\r\n\r\n          <Header />\r\n          {this.props.children}\r\n          <Footer />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={styles.loadingWrapper}>Loading...</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => { return {\r\n    forums: state.app.forums,\r\n    currentForum: state.app.currentForum,\r\n    networkStatus: state.app.networkStatus,\r\n  }; },\r\n  (dispatch) => { return {\r\n    getNetworkStatus: () => { dispatch(getNetworkStatus()); },\r\n    getForums: () => { dispatch(getForums()); },\r\n    updateCurrentForum: (currentForum) => { dispatch(updateCurrentForum(currentForum)); },\r\n    getUser: () => { dispatch(getUser()); },\r\n  }; }\r\n)(AppContainer);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router';\r\nimport classnames from 'classnames';\r\n\r\nimport appLayout from 'SharedStyles/appLayout';\r\nimport styles from './styles';\r\n\r\n// components for AdminHeader\r\nimport UserMenu from 'Components/Header/UserMenu';\r\nimport Logo from 'Components/Header/Logo';\r\nimport NavigationBar from 'Components/Header/NavigationBar';\r\nimport PlaceholderImage from 'SharedStyles/placeholder.jpg';\r\n\r\nclass AdminHeader extends Component {\r\n  renderNavLinks() {\r\n    return [\r\n      { name: 'Dashboard', link: '/admin' },\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      authenticated,\r\n      name,\r\n      username,\r\n      avatarUrl,\r\n    } = this.props.user;\r\n\r\n    return (\r\n      <div className={classnames(appLayout.constraintWidth)}>\r\n        <div className={styles.headerTop}>\r\n          <Logo />\r\n          Welcome Admin\r\n          <UserMenu\r\n            signedIn={authenticated}\r\n            userName={name || username}\r\n            gitHandler={username}\r\n            avatar={avatarUrl}\r\n          />\r\n        </div>\r\n        <NavigationBar\r\n          navigationLinks={this.renderNavLinks()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => { return {\r\n    user: state.user,\r\n    forums: state.app.forums,\r\n  }; }\r\n)(AdminHeader);\r\n","import React, { Component } from 'react';\r\nimport { Link, browserHistory } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { getUser } from './actions';\r\n\r\nimport AdminHeader from 'Containers/AdminHeader';\r\nimport appLayout from 'SharedStyles/appLayout';\r\nimport styles from './styles';\r\n\r\nclass AdminContainer extends Component {\r\n  componentDidMount() {\r\n    // fetch the user\r\n    this.props.getUser();\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    if (user.fetchingUser) {\r\n      return (\r\n        <div style={{ textAlign: 'center', marginTop: 20 }}>\r\n          Loading users profile...\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (user.role === 'admin') {\r\n      return (\r\n        <div>\r\n          <Helmet><title>ReForum | Admin</title></Helmet>\r\n          <AdminHeader />\r\n          {this.props.children}\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div style={{ textAlign: 'center', marginTop: 20 }}>\r\n          We are cordially sorry that you are not allowed to view admin panel!<br />\r\n          Please go back to <Link to='/'>root</Link> page.\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div style={{ textAlign: 'center', marginTop: 20 }}>\r\n        Something went wrong.<br />\r\n        Please go back to <Link to='/'>root</Link> page.\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => { return {\r\n    user: state.user,\r\n  }; },\r\n  (dispatch) => { return {\r\n    getUser: () => { dispatch(getUser()); },\r\n  }; }\r\n)(AdminContainer);\r\n","import axios from 'axios';\r\nimport env from '../../env.js'\r\nimport storage from '../../App/storage.js';\r\n\r\nexport const getAdminDashboardInfoAPI = () => {\r\n  var accessString = storage.get('token');\r\n  return (axios.get(env.url+'/api/admin/admin_dashboard_info',{\r\n    headers: { Authorization: `bearer ${accessString}` },\r\n  }));\r\n};\r\n\r\nexport const createForumAPI = (forum_obj) => {\r\n  var accessString = storage.get('token');\r\n  return (axios.post(env.url+'/api/admin/create_forum', forum_obj,{\r\n    headers: { Authorization: `bearer ${accessString}` },\r\n  }));\r\n};\r\n\r\nexport const deleteForumAPI = (forum_id) => {\r\n  var accessString = storage.get('token');\r\n  return (axios.post(env.url+'/api/admin/delete_forum', { forum_id },{\r\n    headers: { Authorization: `bearer ${accessString}` },\r\n  }));\r\n};\r\n","import {\r\n  GET_ALL_INFO_START,\r\n  GET_ALL_INFO_SUCCESS,\r\n  GET_ALL_INFO_FAILURE,\r\n\r\n  CREATE_FORUM,\r\n  CREATE_FORUM_SUCCESS,\r\n  CREATE_FORUM_FAILURE,\r\n\r\n  DELETE_FORUM,\r\n  DELETE_FORUM_SUCCESS,\r\n  DELETE_FORUM_FAILURE,\r\n\r\n  FETCHING_DISCUSSIONS_FAILURE,\r\n} from './constants';\r\n\r\nimport {\r\n  getAdminDashboardInfoAPI,\r\n  createForumAPI,\r\n  deleteForumAPI,\r\n} from './api';\r\n\r\n/**\r\n * get all the info needed for dashboard\r\n * @return {action}\r\n */\r\nexport const getAdminDashboardInfo = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: GET_ALL_INFO_START });\r\n\r\n    getAdminDashboardInfoAPI().then(\r\n      data => dispatch({ type: GET_ALL_INFO_SUCCESS, payload: data.data }),\r\n      error => dispatch({ type: FETCHING_DISCUSSIONS_FAILURE, payload: error })\r\n    );\r\n  };\r\n};\r\n\r\n/**\r\n * create a new forum\r\n * @param  {Object} forumObj\r\n * @return {action}\r\n */\r\nexport const createForum = (forumObj) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: CREATE_FORUM });\r\n\r\n    // call the create forum api\r\n    createForumAPI(forumObj).then(\r\n      forumData => {\r\n        // get admin info again to refresh the infos\r\n        getAdminDashboardInfoAPI().then(\r\n          data => {\r\n            // data is refreshed\r\n            dispatch({ type: GET_ALL_INFO_SUCCESS, payload: data.data });\r\n\r\n            // check if the forum was created\r\n            if (forumData.data.created) { dispatch({ type: CREATE_FORUM_SUCCESS }); }\r\n            else dispatch({ type: CREATE_FORUM_FAILURE });\r\n          },\r\n          error => dispatch({ type: FETCHING_DISCUSSIONS_FAILURE, payload: error })\r\n        );\r\n      },\r\n      error => dispatch({ type: CREATE_FORUM_FAILURE })\r\n    );\r\n  };\r\n};\r\n\r\nexport const deleteForum = (forumId) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: DELETE_FORUM });\r\n\r\n    deleteForumAPI(forumId).then(\r\n      forumData => {\r\n        dispatch({ type: GET_ALL_INFO_START });\r\n\r\n        // get admin info again to refresh the infos\r\n        getAdminDashboardInfoAPI().then(\r\n          data => {\r\n            dispatch({ type: GET_ALL_INFO_SUCCESS, payload: data.data });\r\n\r\n            // check if th eforum was deleted\r\n            if (forumData.data.deleted) { dispatch({ type: DELETE_FORUM_SUCCESS }); }\r\n            else dispatch({ type: DELETE_FORUM_FAILURE });\r\n          },\r\n          error => dispatch({ type: FETCHING_DISCUSSIONS_FAILURE, payload: error })\r\n        );\r\n      },\r\n      error => dispatch({ type: DELETE_FORUM_FAILURE })\r\n    );\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nimport PropTypes from 'prop-types';\r\nclass Counts extends Component {\r\n  render() {\r\n    const {\r\n      count,\r\n      label,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.count}>{count}</div>\r\n        <div className={styles.label}>{label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCounts.defaultProps = {\r\n  count: 0,\r\n  label: 'default',\r\n};\r\n\r\nCounts.propTypes = {\r\n  count: PropTypes.number,\r\n  label: PropTypes.string,\r\n};\r\n\r\nexport default Counts;\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nimport Button from 'Components/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ForumBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newForumTitle: '',\r\n      newForumSlug: '',\r\n      errorMsg: null,\r\n    };\r\n\r\n    this.handleCreateForum = this.handleCreateForum.bind(this);\r\n  }\r\n\r\n  handleCreateForum() {\r\n    // remove any error messages\r\n    this.setState({ errorMsg: null });\r\n\r\n    const {\r\n      newForumTitle,\r\n      newForumSlug,\r\n    } = this.state;\r\n\r\n    let convertedTitle = null;\r\n    let convertedSlug = null;\r\n\r\n    // check and convert forum title\r\n    if (newForumTitle !== '') {\r\n      // trim any leading or ending white spaces\r\n      convertedTitle = newForumTitle.trim();\r\n\r\n      // check the length, 4 is hardcoded here\r\n      if (convertedTitle.length < 4) {\r\n        return this.setState({ errorMsg: 'Forum title should have at least 4 charecters.' });\r\n      }\r\n    } else {\r\n      return this.setState({ errorMsg: 'Forum title is empty. Please provide a valid Forum Title.' });\r\n    }\r\n\r\n    // check and confirm forum slug\r\n    if (convertedSlug !== '') {\r\n      const slugRegex = /^[a-z\\_]+$/;\r\n      convertedSlug = newForumSlug.match(slugRegex) ? newForumSlug : null;\r\n\r\n      // length check\r\n      if (convertedSlug && convertedSlug.length < 4) {\r\n        return this.setState({ errorMsg: 'Forum slug should have at least 4 charecters.' });\r\n      }\r\n    } else {\r\n      return this.setState({ errorMsg: 'Forum slug is empty. Please provide a valid Forum Slug.' });\r\n    }\r\n\r\n    if (!convertedTitle) { return this.setState({ errorMsg: 'Please provide a valid Forum Title.' }); }\r\n    if (!convertedSlug) { return this.setState({ errorMsg: 'Please provide a valid Forum Slug. Slug can only contain small case alphabets and underscore.' }); }\r\n\r\n    if (convertedTitle && convertedSlug) { this.props.createAction({ title: convertedTitle, slug: convertedSlug }); }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      forums,\r\n      creatingForum,\r\n      deleteAction,\r\n      deletingForum,\r\n    } = this.props;\r\n\r\n    const {\r\n      newForumTitle,\r\n      newForumSlug,\r\n      errorMsg,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.title}>Current Forums</div>\r\n        <div className={styles.forumsContainer}>\r\n          { deletingForum && <div className={styles.loadingMsg}>Removing forum, please wait...</div> }\r\n\r\n          { forums.map((forum) => <div key={forum.id} className={styles.forum}>\r\n            <div className={styles.forumTitle}>{ forum.name }</div>\r\n            <div className={styles.forumSlug}>({ forum.slug })</div>\r\n            <div className={styles.removeButton}>\r\n              <Button onClick={() => { deleteAction(forum.id); }}>Remove</Button>\r\n            </div>\r\n          </div>) }\r\n\r\n        </div>\r\n\r\n        <div className={styles.createForumContainer}>\r\n          { creatingForum && <div className={styles.loadingMsg}>Creating forum, please wait...</div> }\r\n          <div className={styles.createTitle}>Create New Forum</div>\r\n          <div className={styles.createForum}>\r\n            <div className={styles.createInputContainer}>\r\n              <div className={styles.inputLabel}>Title: </div>\r\n              <input\r\n                type={'text'}\r\n                className={styles.createInput}\r\n                placeholder={'Forum Title'}\r\n                onChange={(e) => { this.setState({ newForumTitle: e.target.value }); }}\r\n              />\r\n            </div>\r\n            <div className={styles.createInputContainer}>\r\n              <div className={styles.inputLabel}>Slug: </div>\r\n              <input\r\n                type={'text'}\r\n                className={styles.createInput}\r\n                placeholder={'forum_slug'}\r\n                onChange={(e) => { this.setState({ newForumSlug: e.target.value }); }}\r\n              />\r\n            </div>\r\n            <Button onClick={this.handleCreateForum}>Create</Button>\r\n          </div>\r\n          { errorMsg && <div className={styles.errorMsg}>{errorMsg}</div> }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForumBox.defaultProps = {\r\n};\r\n\r\nForumBox.propTypes = {\r\n  forums: PropTypes.array,\r\n  deletingForum: PropTypes.bool,\r\n  deleteAction: PropTypes.func,\r\n  creatingForum: PropTypes.bool,\r\n  createAction: PropTypes.func,\r\n};\r\n\r\nexport default ForumBox;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport appLayout from 'SharedStyles/appLayout';\r\nimport styles from './styles';\r\n\r\nimport {\r\n  getAdminDashboardInfo,\r\n  createForum,\r\n  deleteForum,\r\n} from './actions';\r\nimport Counts from 'Components/Dashboard/Counts';\r\nimport ForumBox from 'Components/Dashboard/ForumBox';\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    // get information needed for dashboard\r\n    this.props.getAdminDashboardInfo();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      discussionCount,\r\n      opinionCount,\r\n      forumCount,\r\n      userCount,\r\n      forums,\r\n    } = this.props.adminInfo.info;\r\n\r\n    const {\r\n      loadingInfo,\r\n      creatingForum,\r\n      creatingForumError,\r\n      deletingForum,\r\n      deletingForumError,\r\n    } = this.props;\r\n\r\n    const forumsArray = forums.map((forum) => {\r\n      return { id: forum._id, name: forum.forum_name, slug: forum.forum_slug };\r\n    });\r\n\r\n    return (\r\n      <div className={classnames(appLayout.constraintWidth, styles.container)}>\r\n        { loadingInfo && <div className={classnames(styles.loadingMsg)}>\r\n          Loading dashboard info...\r\n        </div> }\r\n\r\n        <div className={styles.countsContainer}>\r\n          <Counts label={'Users'} count={userCount} />\r\n          <Counts label={'Discussions'} count={discussionCount} />\r\n          <Counts label={'Opinions'} count={opinionCount} />\r\n          <Counts label={'Forums'} count={forumCount} />\r\n        </div>\r\n\r\n        <ForumBox\r\n          forums={forumsArray}\r\n          deletingForum={deletingForum}\r\n          deleteAction={(forumId) => { this.props.deleteForum(forumId); }}\r\n          creatingForum={creatingForum}\r\n          createAction={(forumObj) => { this.props.createForum(forumObj); }}\r\n        />\r\n\r\n        { creatingForumError && <div className={styles.errorMsg}>{creatingForumError}</div> }\r\n        { deletingForumError && <div className={styles.errorMsg}>{deletingForumError}</div> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => { return {\r\n    adminInfo: state.adminInfo,\r\n    loadingInfo: state.adminInfo.loadingInfo,\r\n    creatingForum: state.adminInfo.creatingForum,\r\n    creatingForumError: state.adminInfo.creatingForumError,\r\n    deletingForum: state.adminInfo.deletingForum,\r\n    deletingForumError: state.adminInfo.deletingForumError,\r\n  }; },\r\n  (dispatch) => { return {\r\n    getAdminDashboardInfo: () => { dispatch(getAdminDashboardInfo()); },\r\n    deleteForum: (forumId) => { dispatch(deleteForum(forumId)); },\r\n    createForum: (forumObj) => { dispatch(createForum(forumObj)); },\r\n  }; }\r\n)(Dashboard);\r\n","import axios from 'axios';\r\nimport Base32 from '../../util/base32.js'\r\n\r\nimport env from '../../env.js'\r\nconst keccak256 = require('keccak256');\r\n/**\r\n * feed apis\r\n */\r\nexport const fetchDiscussions = (forum_id,sortingMethod,pageNum) => {\r\n  return axios.get(env.url+`/api/forum/${forum_id}/discussions?sorting_method=${sortingMethod}&pageNum=${pageNum}`);\r\n};\r\nexport const fetchDiscussionsIpfs = (forum_id,sortingMethod,pageNum) => {\r\n  \r\n  let forumTable = JSON.stringify({url:`/api/forum/${forum_id}/discussions?sorting_method=${sortingMethod}&pageNum=${pageNum}`});\r\n  let hashCode = keccak256(forumTable).toString('hex');\r\n  return axios.get(hashCode+\".json\");\r\n};\r\n\r\nexport const fetchPinnedDiscussions = (forum_id) => {\r\n  return axios.get(env.url+`/api/forum/${forum_id}/pinned_discussions`);\r\n};\r\nexport const fetchPinnedDiscussionsIpfs = (forum_id) => {\r\n  let forumTable = JSON.stringify({url:`/api/forum/${forum_id}/pinned_discussions`});\r\n  let hashCode = keccak256(forumTable).toString('hex');\r\n  return axios.get(hashCode+\".json\");\r\n};\r\n","import _ from 'lodash';\r\nimport {\r\n  START_FETCHING_DISCUSSIONS,\r\n  STOP_FETCHING_DISCUSSIONS,\r\n  FETCHING_DISCUSSIONS_SUCCESS,\r\n  FETCHING_DISCUSSIONS_FAILURE,\r\n\r\n  START_FETCHING_PINNED_DISCUSSIONS,\r\n  STOP_FETCHING_PINNED_DISCUSSIONS,\r\n  FETCHING_PINNED_DISCUSSIONS_SUCCESS,\r\n  FETCHING_PINNED_DISCUSSIONS_FAILURE,\r\n\r\n  UPDATE_SORTING_METHOD,\r\n  INVALID_FORUM,\r\n} from './constants';\r\nimport {\r\n  fetchDiscussions,\r\n  fetchDiscussionsIpfs,\r\n  fetchPinnedDiscussions,\r\n  fetchPinnedDiscussionsIpfs,\r\n} from './api';\r\n\r\n/**\r\n * find the id for current forum\r\n * @param  {Object} state   the state object\r\n * @param  {String} forum   current forum\r\n * @return {Number}         the forum id\r\n */\r\nconst findForumId = (state, forum) => {\r\n  const { forums } = state.app;\r\n  const forumId = _.find(forums, { forum_slug: forum });\r\n\r\n  if (forumId) { return forumId._id; }\r\n  else { return null; }\r\n};\r\n\r\n/**\r\n * action to fetch forum discussions\r\n * @param  {String}  forum               current forum slug\r\n * @param  {Boolean} feedChanged         if the feed has been changed, default is false\r\n * @param  {String}  sortingMethod       define the sorting method, default is 'date'\r\n * @param  {Boolean} sortingChanged      if user chagned the sorting method\r\n * @return {thunk}\r\n */\r\nexport const getDiscussions = (forumId, feedChanged=false, sortingChanged=false,pageNum=1) => {\r\n  return (dispatch, getState) => {\r\n    const sortingMethod = getState().feed.sortingMethod;\r\n\r\n    // show the loading message when user change forum or change sorting method\r\n    if (feedChanged || sortingChanged) dispatch({ type: START_FETCHING_DISCUSSIONS });\r\n\r\n    if (!forumId) {\r\n      dispatch({ type: INVALID_FORUM });\r\n    }\r\n    else {\r\n      \r\n      var networkStatus = getState().networkStatus;\r\n      if (networkStatus.networkStatus==true){\r\n        // start fetching discussions\r\n        fetchDiscussions(forumId, sortingMethod,pageNum).then(\r\n          data => dispatch({ type: FETCHING_DISCUSSIONS_SUCCESS, payload: data.data }),\r\n          error => dispatch({ type: FETCHING_DISCUSSIONS_FAILURE })\r\n        );\r\n      }else{\r\n        \r\n        fetchDiscussionsIpfs(forumId, sortingMethod,pageNum).then(\r\n          data => dispatch({ type: FETCHING_DISCUSSIONS_SUCCESS, payload: data.data }),\r\n          error => dispatch({ type: FETCHING_DISCUSSIONS_FAILURE })\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * action to fetch forum pinned discussions\r\n * @param  {String}  forum                current forum\r\n * @param  {Boolean} [feedChanged=false]  if the feed has been changed\r\n * @return {thunk}\r\n */\r\nexport const getPinnedDiscussions = (forumId, feedChanged) => {\r\n  return (dispatch, getState) => {\r\n    // show the loading message when user change forum\r\n    if (feedChanged) dispatch({ type: START_FETCHING_PINNED_DISCUSSIONS });;\r\n\r\n    if (!forumId) {\r\n      dispatch({ type: INVALID_FORUM });\r\n    }\r\n    else {\r\n      \r\n      \r\n      var networkStatus = getState().networkStatus;\r\n      \r\n      if (networkStatus.networkStatus==true){\r\n      // start fetching pinned discussions\r\n        return fetchPinnedDiscussions(forumId).then(\r\n          data => dispatch({ type: FETCHING_PINNED_DISCUSSIONS_SUCCESS, payload: data.data }),\r\n          error => { console.log(error); dispatch({ type: FETCHING_PINNED_DISCUSSIONS_FAILURE }); }\r\n        );\r\n        \r\n      }else{\r\n        \r\n        // start fetching pinned discussions\r\n        return fetchPinnedDiscussionsIpfs(forumId).then(\r\n          data => dispatch({ type: FETCHING_PINNED_DISCUSSIONS_SUCCESS, payload: data.data }),\r\n          error => { console.log(error); dispatch({ type: FETCHING_PINNED_DISCUSSIONS_FAILURE }); }\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Update sorting method\r\n * @param  {String} method\r\n * @return {action}\r\n */\r\nexport const updateSortingMethod = (method) => {\r\n  return { type: UPDATE_SORTING_METHOD, payload: method };\r\n};\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nimport Button from 'Components/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tag extends Component {\r\n  render() {\r\n    const {\r\n      name,\r\n      withRemove,\r\n      removeAction,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={classnames(styles.tag, withRemove && styles.tagWithRemove)} style={{color:'#ff9800'}}>\r\n        {name}\r\n        { withRemove &&\r\n          <Button\r\n            onClick={removeAction}\r\n            className={styles.removeButton}\r\n          >\r\n            <i className={'fa fa-close'}></i>\r\n          </Button>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTag.defaultProps = {\r\n  name: '',\r\n  withRemove: false,\r\n  removeAction: () => {},\r\n};\r\n\r\nTag.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  withRemove: PropTypes.bool,\r\n  removeAction: PropTypes.func,\r\n};\r\n\r\nexport default Tag;\r\n","import React, { Component } from 'react';\r\nimport { Link as RouterLink } from 'react-router';\r\nimport Link from '@material-ui/core/Link';\r\nimport classnames from 'classnames';\r\nimport Moment from 'moment';\r\nimport styles from './styles';\r\n\r\nimport Tag from 'Components/Tag';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DiscussionBox extends Component {\r\n  render() {\r\n    const {\r\n      voteCount,\r\n      userName,\r\n      userGitHandler,\r\n      discussionTitle,\r\n      time,\r\n      opinionCount,\r\n      tags,\r\n      link,\r\n      userProfile,\r\n    } = this.props;\r\n\r\n    const postTime = Moment(time);\r\n    const timeDisplay = postTime.from(Moment());\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        \r\n        <div className={classnames(styles.title, userProfile && styles.titleBottomMargin)}><Link variant=\"h6\" component={RouterLink} to={link} color=\"textPrimary\">{discussionTitle}</Link></div>\r\n\r\n        { !userProfile && <div className={styles.posterInfo}>\r\n          <Link component={RouterLink}  to={`/user/${userGitHandler}`} className={styles.name} >{userName}</Link>\r\n          {/* <a target=\"_blank\" href={`https://www.github.com/${userGitHandler}`} className={styles.gitHandler}>\r\n            - <i className={classnames('fa fa-github-alt', styles.gitIcon)}></i> {userGitHandler}\r\n          </a> */}\r\n        </div> }\r\n\r\n        <div className={styles.boxFooter}>\r\n          <div className={styles.tagsArea}  >\r\n            { tags.map((tag) => <Tag key={tag} name={tag} />) }\r\n          </div>\r\n\r\n          <div className={styles.postInfo}>\r\n            <span className={styles.info}>{timeDisplay}</span>\r\n            <span className={styles.info} style={{color:'#ff80ab'}}>{voteCount} favorites</span>\r\n            <span className={styles.info} style={{color:'#90caf9'}}>{opinionCount} opinions</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDiscussionBox.defaultProps = {\r\n  discussionId: 1,\r\n  voteCount: 20,\r\n  userName: 'Hello World',\r\n  userGitHandler: 'github',\r\n  discussionTitle: 'This is a default post title',\r\n  time: Moment(),\r\n  opinionCount: 12,\r\n  tags: ['react', 'redux', 'nodejs'],\r\n  link: '',\r\n  userProfile: false,\r\n};\r\n\r\nDiscussionBox.propTypes = {\r\n  discussionId: PropTypes.number,\r\n  voteCount: PropTypes.number,\r\n  userName: PropTypes.string,\r\n  userGitHandler: PropTypes.string,\r\n  discussionTitle: PropTypes.string,\r\n  time: PropTypes.any,\r\n  opinionCount: PropTypes.number,\r\n  tags: PropTypes.array,\r\n  link: PropTypes.string,\r\n  userProfile: PropTypes.bool,\r\n};\r\n\r\nexport default DiscussionBox;\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport Moment from 'moment';\r\nimport styles from './styles';\r\n\r\nimport DiscussionBox from './DiscussionBox';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FeedBox extends Component {\r\n  renderSort() {\r\n    const {\r\n      activeSortingMethod,\r\n      onChangeSortingMethod,\r\n    } = this.props;\r\n\r\n    if (this.props.type === 'general') {\r\n      return (\r\n        <div className={styles.sortList}>\r\n          <span\r\n            className={classnames(styles.sort, (activeSortingMethod === 'date') && styles.sortActive)}\r\n            onClick={() => onChangeSortingMethod('date')}\r\n          >\r\n            Latest\r\n          </span>\r\n          <span\r\n            className={classnames(styles.sort, (activeSortingMethod === 'popularity') && styles.sortActive)}\r\n            onClick={() => onChangeSortingMethod('popularity')}\r\n          >\r\n            Popular\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  renderEmptyDiscussionLine(loading, discussions) {\r\n    if (!loading) {\r\n      if (!discussions || discussions.length === 0) {\r\n        return <div className={styles.loading}>No discussions...</div>;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      type,\r\n      loading,\r\n      discussions,\r\n      currentForum,\r\n      userProfile,\r\n    } = this.props;\r\n\r\n    let discussionBoxTitle = '';\r\n    if (type === 'general') discussionBoxTitle = 'Discussions';\r\n    if (type === 'pinned') discussionBoxTitle = 'Pinned';\r\n\r\n    return (\r\n      <div>\r\n        <div className={styles.container}>\r\n          <div className={styles.header}>\r\n            <span className={styles.title}>{discussionBoxTitle}</span>\r\n            { !userProfile && this.renderSort() }\r\n          </div>\r\n          { loading && <div className={styles.loading}>Loading...</div> }\r\n          { this.renderEmptyDiscussionLine(loading, discussions) }\r\n          { !loading &&\r\n            <div className={styles.discussions}>\r\n              { discussions && discussions.map((discussion) =>\r\n                <DiscussionBox\r\n                  userProfile={userProfile}\r\n                  key={discussion._id}\r\n                  userName={discussion.user.username}\r\n                  userGitHandler={discussion.user.username}\r\n                  discussionTitle={discussion.title}\r\n                  time={discussion.date}\r\n                  tags={discussion.tags}\r\n                  opinionCount={discussion.opinion_count}\r\n                  voteCount={discussion.favorites.length}\r\n                  link={`/${userProfile ? discussion.forum.forum_slug : currentForum}/discussion/${discussion.discussion_slug}`}\r\n                />\r\n              )}\r\n\r\n            </div>\r\n          }\r\n        </div>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFeedBox.defaultProps = {\r\n  type: 'general',\r\n  loading: false,\r\n  discussions: [],\r\n  currentForum: 'general',\r\n  activeSortingMethod: 'date',\r\n  onChangeSortingMethod: (val) => { },\r\n  userProfile: false,\r\n};\r\n\r\nFeedBox.propTypes = {\r\n  type: PropTypes.oneOf(['general', 'pinned']),\r\n  loading: PropTypes.bool,\r\n  discussions: PropTypes.array,\r\n  currentForum: PropTypes.string,\r\n  activeSortingMethod: PropTypes.string,\r\n  onChangeSortingMethod: PropTypes.func,\r\n  userProfile: PropTypes.bool,\r\n};\r\n\r\nexport default FeedBox;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router';\r\nimport styles from './styles';\r\n\r\n// import Button from 'Components/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\nclass SideBar extends Component {\r\n  render() {\r\n    const {\r\n      currentForum,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={styles.sidebarContainer}>\r\n        <Link to={`/${currentForum}/new_discussion`} style={{\r\n  textDecoration:'none'}}>\r\n          <Button variant=\"contained\" color=\"primary\" fullWidth \r\n            startIcon={<AddCircleRoundedIcon />}>\r\n            New Discussion\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nSideBar.defaultProps = {\r\n  currentForum: 'general',\r\n};\r\n\r\nSideBar.propTypes = {\r\n  currentForum: PropTypes.string,\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport classnames from 'classnames';\r\nimport _ from 'lodash';\r\n\r\nimport {\r\n  getDiscussions,\r\n  getPinnedDiscussions,\r\n  updateSortingMethod,\r\n} from './actions';\r\n\r\n// import Button from 'Components/Button';\r\nimport FeedBox from 'Components/FeedBox';\r\nimport SideBar from 'Components/SideBar';\r\n\r\nimport appLayout from 'SharedStyles/appLayout';\r\nimport styles from './styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\nclass ForumFeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pageNum: 1,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const {\r\n      currentForumId,\r\n      getDiscussions,\r\n      getPinnedDiscussions,\r\n    } = this.props;\r\n\r\n    // get the discussions and pinned discussions\r\n    getDiscussions(currentForumId());\r\n    getPinnedDiscussions(currentForumId());\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      currentForum,\r\n      currentForumId,\r\n      getDiscussions,\r\n      getPinnedDiscussions,\r\n    } = this.props;\r\n    const{\r\n      pageNum\r\n    } = this.state;\r\n\r\n    // get the discussions again\r\n    // if the forum didn't matched\r\n    if (prevProps.currentForum !== currentForum) {\r\n      const feedChanged = true;\r\n      getDiscussions(currentForumId(), feedChanged,pageNum);\r\n      getPinnedDiscussions(currentForumId(), feedChanged);\r\n    }\r\n  }\r\n  previousPage(){\r\n    const{\r\n      pageNum\r\n    } = this.state;\r\n    \r\n    const {\r\n      currentForumId,\r\n      getDiscussions,\r\n    } = this.props;\r\n\r\n    \r\n    if (pageNum==1){\r\n      alert(\"no more discussions\");\r\n    }else{\r\n      this.setState({\r\n        pageNum:pageNum-1\r\n      })\r\n      getDiscussions(currentForumId(), false,false,pageNum-1);\r\n    }\r\n    \r\n  }\r\n  nextPage(){\r\n    const{\r\n      pageNum\r\n    } = this.state;\r\n\r\n    const {\r\n      currentForumId,\r\n      getDiscussions,\r\n      discussions\r\n    } = this.props;\r\n    \r\n    if (discussions.length>=10){\r\n      this.setState({\r\n        pageNum:pageNum+1\r\n      })\r\n      getDiscussions(currentForumId(), false,false,pageNum+1);\r\n    }else{\r\n      alert(\"no more discussions\");\r\n    }\r\n  }\r\n\r\n  handleSortingChange(newSortingMethod) {\r\n    const {\r\n      currentForum,\r\n      getDiscussions,\r\n      updateSortingMethod,\r\n      sortingMethod,\r\n      currentForumId,\r\n    } = this.props;\r\n\r\n    if (sortingMethod !== newSortingMethod) {\r\n      updateSortingMethod(newSortingMethod);\r\n      getDiscussions(currentForumId(), false, true);\r\n    }\r\n  }\r\n\r\n  renderNewDiscussionButtion() {\r\n    const { currentForum } = this.props;\r\n    return (\r\n      <div className={classnames(appLayout.showOnMediumBP,styles.newDiscussionBtn)}>\r\n      <Link to={`/${currentForum}/new_discussion`}>\r\n          <Button variant=\"contained\" color=\"primary\" fullWidth \r\n            startIcon={<AddCircleRoundedIcon />}>\r\n          New Discussion\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentForum,\r\n      discussions,\r\n      fetchingDiscussions,\r\n      pinnedDiscussions,\r\n      fetchingPinnedDiscussions,\r\n      sortingMethod,\r\n      error,\r\n    } = this.props;\r\n    const{\r\n      pageNum\r\n    } = this.state;\r\n\r\n    if (error) {\r\n      return (\r\n        <div className={classnames(styles.errorMsg)}>\r\n          {error}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={classnames(appLayout.constraintWidth, styles.contentArea)}>\r\n        <Helmet><title>{`ReForum | ${currentForum}`}</title></Helmet>\r\n\r\n        <div className={appLayout.primaryContent}>\r\n        { this.renderNewDiscussionButtion() }\r\n          <FeedBox\r\n            type='pinned'\r\n            loading={fetchingPinnedDiscussions}\r\n            discussions={pinnedDiscussions}\r\n            currentForum={currentForum}\r\n          />\r\n\r\n          <FeedBox\r\n            type='general'\r\n            loading={fetchingDiscussions}\r\n            discussions={discussions}\r\n            currentForum={currentForum}\r\n            onChangeSortingMethod={this.handleSortingChange.bind(this)}\r\n            activeSortingMethod={sortingMethod}\r\n          />\r\n\r\n          <div style={{display:'flex',paddingTop:'15px',paddingBottom:'15px'}}>\r\n            <button type=\"button\" style={{flex:'1'}} onClick={this.previousPage.bind(this)}>Previous</button>\r\n            <div style={{flex:'1',textAlign:'center'}}>{pageNum}</div>\r\n            <button type=\"button\" style={{flex:'1'}} onClick={this.nextPage.bind(this)}>Next</button>\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <div className={appLayout.secondaryContent} >\r\n          <SideBar currentForum={currentForum} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => { return {\r\n    currentForum: state.app.currentForum,\r\n    currentForumId: () => {\r\n      const currentForumObj = _.find(state.app.forums, { forum_slug: state.app.currentForum });\r\n      if (currentForumObj) return currentForumObj._id;\r\n      else return null;\r\n    },\r\n    fetchingDiscussions: state.feed.fetchingDiscussions,\r\n    discussions: state.feed.discussions,\r\n    fetchingPinnedDiscussions: state.feed.fetchingPinnedDiscussions,\r\n    sortingMethod: state.feed.sortingMethod,\r\n    pinnedDiscussions: state.feed.pinnedDiscussions,\r\n    error: state.feed.error,\r\n  }; },\r\n  (dispatch) => { return {\r\n    getDiscussions: (currentForumId, feedChanged, sortingMethod, sortingChanged) => { dispatch(getDiscussions(currentForumId, feedChanged, sortingMethod, sortingChanged)); },\r\n    getPinnedDiscussions: (currentForumId, feedChanged) => { dispatch(getPinnedDiscussions(currentForumId, feedChanged)); },\r\n    updateSortingMethod: (method) => { dispatch(updateSortingMethod(method)); },\r\n  }; }\r\n)(ForumFeed);\r\n","import axios from 'axios';\r\n\r\nimport Base32 from '../../util/base32.js'\r\n\r\nimport env from '../../env.js';\r\nimport storage from './../../App/storage.js';\r\nconst keccak256 = require('keccak256');\r\n/**\r\n * single discussion apis\r\n */\r\nexport const fetchSingleDiscussion = (discussion_slug) => {\r\n  return axios.get(env.url+`/api/discussion/${discussion_slug}`);\r\n};\r\n\r\nexport const fetchSingleDiscussionIpfs = (discussion_slug) => {\r\n  let forumTable = JSON.stringify({url:`/api/discussion/${discussion_slug}`});\r\n  let hashCode = keccak256(forumTable).toString('hex');\r\n  return axios.get(hashCode+\".json\");\r\n};\r\n\r\nexport const toggleFavoriteApi = (discussion_id) => {\r\n  var accessString = storage.get('token');\r\n  return axios.get(env.url+`/api/discussion/toggleFavorite/${discussion_id}`,{\r\n    headers: { Authorization: `bearer ${accessString}` },\r\n  });\r\n};\r\n\r\nexport const postOpinionApi = (opinion) => {\r\n  var accessString = storage.get('token');\r\n  return axios.post(env.url+'/api/opinion/newOpinion', opinion,{\r\n    headers: { Authorization: `bearer ${accessString}` },\r\n  });\r\n};\r\n\r\nexport const deletePostApi = (discussionSlug) => {\r\n  var accessString = storage.get('token');\r\n  return axios.delete(env.url+`/api/discussion/deleteDiscussion/${discussionSlug}`,{\r\n    headers: { Authorization: `bearer ${accessString}` },\r\n  });\r\n};\r\n\r\nexport const deleteOpinionApi = (opinionId) => {\r\n  var accessString = storage.get('token');\r\n  return axios.delete(env.url+`/api/opinion/deleteOpinion/${opinionId}`,{\r\n    headers: { Authorization: `bearer ${accessString}` },\r\n  });\r\n};\r\n","import {\r\n  FETCHING_SINGLE_DISC_START,\r\n  FETCHING_SINGLE_DISC_END,\r\n  FETCHING_SINGLE_DISC_SUCCESS,\r\n  FETCHING_SINGLE_DISC_FAILURE,\r\n\r\n  TOGGLE_FAVORITE_START,\r\n  TOGGLE_FAVORITE_SUCCESS,\r\n  TOGGLE_FAVORITE_FAILURE,\r\n\r\n  UPDATE_OPINION_CONTENT,\r\n\r\n  POSTING_OPINION_START,\r\n  POSTING_OPINION_SUCCESS,\r\n  POSTING_OPINION_FAILURE,\r\n\r\n  DELETE_DISC_START,\r\n  DELETE_DISC_SUCCESS,\r\n  DELETE_DISC_REDIRECT,\r\n  DELETE_DISC_FAILURE,\r\n\r\n  DELETE_OPINION_START,\r\n  DELETE_OPINION_SUCCESS,\r\n  DELETE_OPINION_FAILURE,\r\n} from './constants';\r\n\r\nimport {\r\n  fetchSingleDiscussion,\r\n  fetchSingleDiscussionIpfs,\r\n  fetchOpinions,\r\n  toggleFavoriteApi,\r\n  postOpinionApi,\r\n  deletePostApi,\r\n  deleteOpinionApi,\r\n} from './api';\r\n\r\n/**\r\n * get the discussion from server\r\n * @param  {String} discussionSlug\r\n * @return {action}\r\n */\r\nexport const getDiscussion = (discussionSlug) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: FETCHING_SINGLE_DISC_START });\r\n    \r\n    var networkStatus = getState().networkStatus;\r\n      \r\n    if (networkStatus.networkStatus==true){\r\n      fetchSingleDiscussion(discussionSlug).then(\r\n        data => {\r\n          if (data.data) dispatch({ type: FETCHING_SINGLE_DISC_SUCCESS, payload: data.data });\r\n          else dispatch({ type: FETCHING_SINGLE_DISC_FAILURE });\r\n        },\r\n        error => dispatch({ type: FETCHING_SINGLE_DISC_FAILURE })\r\n      );\r\n    }else{\r\n      fetchSingleDiscussionIpfs(discussionSlug).then(\r\n        data => {\r\n          if (data.data) dispatch({ type: FETCHING_SINGLE_DISC_SUCCESS, payload: data.data });\r\n          else dispatch({ type: FETCHING_SINGLE_DISC_FAILURE });\r\n        },\r\n        error => dispatch({ type: FETCHING_SINGLE_DISC_FAILURE })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * toggle favorite status of the discussion\r\n * @param  {ObjectId} discussionId\r\n * @return {action}\r\n */\r\nexport const toggleFavorite = (discussionId) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: TOGGLE_FAVORITE_START });\r\n\r\n    toggleFavoriteApi(discussionId).then(\r\n      data => {\r\n        if (data.data._id) {\r\n          dispatch({ type: TOGGLE_FAVORITE_SUCCESS });\r\n          dispatch({ type: FETCHING_SINGLE_DISC_SUCCESS, payload: data.data });\r\n        }\r\n        else dispatch({ type: TOGGLE_FAVORITE_FAILURE });\r\n      },\r\n      error => dispatch({ type: TOGGLE_FAVORITE_FAILURE })\r\n    );\r\n  };\r\n};\r\n\r\n/**\r\n * update opinion content in redux state (controlled input)\r\n * @param  {Object} value\r\n * @return {action}\r\n */\r\nexport const updateOpinionContent = (value) => {\r\n  return {\r\n    type: UPDATE_OPINION_CONTENT,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n/**\r\n * post an opinion\r\n * @param  {Object} opinion\r\n * @param  {String} discussionSlug\r\n * @return {action}\r\n */\r\nexport const postOpinion = (opinion, discussionSlug) => {\r\n  return (dispatch, getState) => {\r\n    // dispatch to show the posting message\r\n    dispatch({ type: POSTING_OPINION_START });\r\n\r\n    // validate the opinion\r\n    if (!opinion.content || opinion.content.length < 20) {\r\n      dispatch({ type: POSTING_OPINION_FAILURE, payload: 'Please provide a bit more info in your opinion....at least 20 characters.' });\r\n    } else {\r\n      // call the api to post the opinion\r\n      postOpinionApi(opinion).then(\r\n        data => {\r\n          if (data.data._id) {\r\n            // fetch the discussion to refresh the opinion list\r\n            fetchSingleDiscussion(discussionSlug).then(\r\n              data => {\r\n                dispatch({ type: FETCHING_SINGLE_DISC_SUCCESS, payload: data.data });\r\n                dispatch({ type: POSTING_OPINION_SUCCESS });\r\n              },\r\n              error => dispatch({ type: FETCHING_SINGLE_DISC_FAILURE })\r\n            );\r\n          }\r\n          else dispatch({ type: POSTING_OPINION_FAILURE });\r\n        },\r\n        error => dispatch({ type: POSTING_OPINION_FAILURE })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * delete the discussion post\r\n * @param  {String} discussionSlug\r\n * @return {action}\r\n */\r\nexport const deletePost = (discussionSlug) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: DELETE_DISC_START });\r\n    deletePostApi(discussionSlug).then(\r\n      data => {\r\n        if (data.data.deleted) { dispatch({ type: DELETE_DISC_SUCCESS }); }\r\n        else { dispatch({ type: DELETE_DISC_FAILURE }); }\r\n      },\r\n      error => dispatch({ type: DELETE_DISC_FAILURE })\r\n    );\r\n  };\r\n};\r\n\r\n/**\r\n * after a successfull deletion of a discussion\r\n * the user should be redirected to the home page\r\n * @return {action}\r\n */\r\nexport const deletedDiscussionRedirect = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: DELETE_DISC_REDIRECT });\r\n  };\r\n};\r\n\r\n/**\r\n * delete an opinion\r\n * @param  {ObjectId} opinionId\r\n * @param  {String} discussionSlug\r\n * @return {action}\r\n */\r\nexport const deleteOpinion = (opinionId, discussionSlug) => {\r\n  return (dispatch, getState) => {\r\n    // show the loading message\r\n    dispatch({ type: DELETE_OPINION_START, payload: opinionId });\r\n\r\n    // call the api\r\n    deleteOpinionApi(opinionId).then(\r\n      data => {\r\n        if (data.data.deleted) {\r\n\r\n          // fetch the discussion again to refresh the opinions\r\n          fetchSingleDiscussion(discussionSlug).then(\r\n            data => {\r\n              dispatch({ type: DELETE_OPINION_SUCCESS });\r\n              dispatch({ type: FETCHING_SINGLE_DISC_SUCCESS, payload: data.data });\r\n            },\r\n            error => dispatch({ type: FETCHING_SINGLE_DISC_FAILURE })\r\n          );\r\n\r\n        }\r\n        else { dispatch({ type: DELETE_OPINION_FAILURE }); }\r\n      },\r\n      error => dispatch({ type: DELETE_OPINION_FAILURE })\r\n    );\r\n  };\r\n};\r\n","import 'braft-editor/dist/index.css'\r\nimport React from 'react'\r\nimport BraftEditor from 'braft-editor'\r\nimport {\r\n  Editor,\r\n  EditorState,\r\n  ContentState,\r\n  RichUtils,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n} from 'draft-js';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\nimport PropTypes from 'prop-types';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nexport default class RichMediaEditor extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n\r\n    this.onEditorStateChange = this.onEditorStateChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const { value } = this.props;\r\n    if (value) {\r\n      const contentState = convertFromRaw(JSON.parse(value));\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.setState({ editorState });\r\n    }\r\n    this.isLivinig = true\r\n    // 3秒后更改编辑器内容\r\n    // setTimeout(this.setEditorContentAsync, 3000)\r\n  }\r\n\r\n  onEditorStateChange(editorState) {\r\n    const { onChange } = this.props;\r\n    this.setState({ editorState });\r\n\r\n    // trigger on change converting the ContentState to raw object\r\n    onChange(JSON.stringify(convertToRaw(editorState.getCurrentContent())));\r\n  }\r\n  componentWillUnmount() {\r\n    this.isLivinig = false\r\n  }\r\n\r\n  // handleChange = (editorState) => {\r\n  //   this.setState({\r\n  //     editorState: editorState,\r\n  //     outputHTML: editorState.toHTML()\r\n  //   })\r\n  // }\r\n\r\n  // setEditorContentAsync = () => {\r\n  //   this.isLivinig && this.setState({\r\n  //     editorState: BraftEditor.createEditorState('<p>你好，<b>世界!</b><p>')\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n\r\n    const { editorState, outputHTML } = this.state\r\n    const extendControls = [\r\n      'separator',\r\n      {\r\n        key: 'my-button', // 控件唯一标识，必传\r\n        type: 'button',\r\n        title: '这是一个自定义的按钮', // 指定鼠标悬停提示文案\r\n        className: 'my-button', // 指定按钮的样式名\r\n        html: null, // 指定在按钮中渲染的html字符串\r\n        text: 'Hello', // 指定按钮文字，此处可传入jsx，若已指定html，则text不会显示\r\n        onClick: () => {\r\n          console.log('Hello World!');\r\n        },\r\n      }\r\n    ]\r\n\r\n\r\n    const {\r\n      type,\r\n      onSave,\r\n      readOnly,\r\n    } = this.props;\r\n\r\n    // styling for inline styles\r\n    const inlineStyleMap = {\r\n      'CODE': {\r\n        color: '#e74c3c',\r\n        backgroundColor: '#f9f9f9',\r\n        border: '1px solid #e8e8e8',\r\n        fontFamily: 'monospace',\r\n        padding: '2px 5px',\r\n        margin: '0px 5px',\r\n      },\r\n    };\r\n\r\n    let saveButtonLabel = '';\r\n    if (type === 'newOpinion') saveButtonLabel = 'Reply';\r\n    if (type === 'newDiscussion') saveButtonLabel = 'Post Discussion';\r\n\r\n    let placeholder = '';\r\n    if (type === 'newOpinion') placeholder = 'Your opinion...';\r\n    if (type === 'newDiscussion') placeholder = 'Discussion summary...';\r\n    var controls;\r\n    if(readOnly){\r\n      controls = [];\r\n    }else{\r\n      controls =['undo', 'redo', 'separator',\r\n      'headings', 'separator',\r\n      'text-color', 'bold', 'italic', 'underline',  'separator',\r\n      'emoji',  'separator',  'text-align', 'separator',\r\n      'blockquote', 'separator',\r\n      'link', 'separator',  'separator',\r\n      'media', 'separator'];\r\n    }\r\n\r\n    return (\r\n      <div className={classnames(styles.container, readOnly && styles.readOnlyContainer)}>\r\n        {/* { !readOnly && <div className={styles.controlsContainer}>\r\n          <InlineStyleControls\r\n            type={type}\r\n            editorState={this.state.editorState}\r\n            onToggle={this.toggleInlineStyle}\r\n          />\r\n          <BlockStyleControls\r\n            type={type}\r\n            editorState={this.state.editorState}\r\n            onToggle={this.toggleBlockType}\r\n          />\r\n        </div>} */}\r\n\r\n        <div\r\n          className={classnames(\r\n            styles.editorContainer,\r\n            !readOnly && styles[type],\r\n            readOnly && styles.readOnlyEditorContainer\r\n          )}\r\n        >\r\n          \r\n          <BraftEditor\r\n            contentStyle = {{height:'auto'}}\r\n            value={this.state.editorState}\r\n            onChange={this.onEditorStateChange}\r\n            language='en'\r\n            readOnly={readOnly}\r\n            controls={controls}\r\n            placeholder={placeholder}\r\n          />\r\n          {/* <Editor\r\n            customStyleMap={inlineStyleMap}\r\n            blockStyleFn={this.customBlockStyles}\r\n            readOnly={readOnly}\r\n            editorState={this.state.editorState}\r\n            onTab={this.onTab}\r\n            ref='editor'\r\n          /> */}\r\n        </div>\r\n\r\n        { !readOnly && \r\n          <Button variant=\"contained\" color=\"primary\" fullWidth onClick={onSave}\r\n            endIcon={<SendIcon></SendIcon>}>\r\n          {saveButtonLabel}\r\n        </Button>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\n\r\nRichMediaEditor.defaultProps = {\r\n  readOnly: false,\r\n  value: null,\r\n  type: 'newDiscussion',\r\n  onChange: () => { },\r\n  onSave: () => { },\r\n};\r\n\r\nRichMediaEditor.propTypes = {\r\n  readOnly: PropTypes.bool,\r\n  value: PropTypes.any,\r\n  type: PropTypes.oneOf(['newDiscussion', 'newOpinion']),\r\n  onChange: PropTypes.func,\r\n  onSave: PropTypes.func,\r\n};\r\n\r\n\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router';\r\nimport moment from 'moment';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nimport PlaceholderImage from 'SharedStyles/placeholder.jpg';\r\nimport Button from 'Components/Button';\r\nimport Tag from 'Components/Tag';\r\nimport RichMediaEditor from 'Components/RichMediaEditor';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Discussion extends Component {\r\n  render() {\r\n    const {\r\n      id,\r\n      userAvatar,\r\n      userName,\r\n      userGitHandler,\r\n      discTitle,\r\n      discDate,\r\n      discContent,\r\n      tags,\r\n      favoriteCount,\r\n      favoriteAction,\r\n      userFavorited,\r\n      toggleingFavorite,\r\n      allowDelete,\r\n      deletingDiscussion,\r\n      deleteAction,\r\n    } = this.props;\r\n\r\n    let dateDisplay = moment(discDate);\r\n    dateDisplay = dateDisplay.from(moment());\r\n\r\n    let favCount = '';\r\n    if (toggleingFavorite) favCount = 'Toggling Favorite...';\r\n    else if (userFavorited) favCount = `Favorited (${favoriteCount})`;\r\n    else if (favoriteCount === 0) favCount = 'Make favorite';\r\n    else if (favoriteCount === 1) favCount = '1 favorite';\r\n    else favCount = `${favoriteCount} favorites`;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n\r\n        <div className={styles.infoContainer}>\r\n          {/* <img className={styles.avatar} src={userAvatar} /> */}\r\n          <div className={styles.columnOnSmallBP}>\r\n            <div className={styles.userInfo}>\r\n              <Link to={`/user/${userGitHandler}`} className={styles.name}>{userName || userGitHandler}</Link>\r\n              {/* <a href={`https://www.github.com/${userGitHandler}`} target=\"_blank\" className={styles.gitHandler}>\r\n                <i className={classnames('fa fa-github-alt', styles.gitIcon)}></i>\r\n                <span>{userGitHandler}</span>\r\n              </a> */}\r\n            </div>\r\n            <div className={styles.dateInfo}>{dateDisplay}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.discTitle}>{discTitle}</div>\r\n        <div className={styles.discContent}>\r\n          <RichMediaEditor\r\n            readOnly={true}\r\n            value={discContent}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.discFooter}>\r\n          <div className={styles.tags}>\r\n            { tags.map(tag => <Tag  name={tag} key={_.uniqueId('tag_')} />)}\r\n          </div>\r\n          <Button noUppercase className={styles.favoriteButton} onClick={() => { !toggleingFavorite && favoriteAction(id); }}>\r\n            <i className={classnames(`fa fa-${userFavorited ? 'heart' : 'heart-o'}`)}></i>\r\n            <span style={{color:'#ff80ab'}}>{favCount}</span>\r\n          </Button>\r\n\r\n          { allowDelete && <Button noUppercase className={styles.deleteButton} onClick={() => { deleteAction(); }}>\r\n            <i className={classnames('fa fa-trash', styles.trashIcon)}></i>\r\n            <span>Delete</span>\r\n          </Button> }\r\n        </div>\r\n\r\n        { deletingDiscussion && <div className={styles.deletingDiscussion}>\r\n          Deleting Discussion...\r\n        </div> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDiscussion.defaultProps = {\r\n  id: 0,\r\n  userAvatar: PlaceholderImage,\r\n  userName: 'User name',\r\n  userGitHandler: 'github',\r\n  discTitle: 'Default Discussion Title',\r\n  discDate: 'a day ago',\r\n  discContent: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n  tags: [ 'react', 'redux', 'webkit' ],\r\n  favoriteCount: 1,\r\n  favoriteAction: () => { },\r\n  userFavorited: false,\r\n  toggleingFavorite: false,\r\n  allowDelete: false,\r\n  deletingDiscussion: false,\r\n  deleteAction: () => { },\r\n};\r\n\r\nDiscussion.propTypes = {\r\n  id: PropTypes.any,\r\n  userAvatar: PropTypes.string,\r\n  userName: PropTypes.string,\r\n  userGitHandler: PropTypes.string,\r\n  discTitle: PropTypes.string,\r\n  discDate: PropTypes.any,\r\n  discContent: PropTypes.any,\r\n  tags: PropTypes.array,\r\n  favoriteCount: PropTypes.number,\r\n  favoriteAction: PropTypes.func,\r\n  userFavorited: PropTypes.bool,\r\n  toggleingFavorite: PropTypes.bool,\r\n  allowDelete: PropTypes.bool,\r\n  deletingDiscussion: PropTypes.bool,\r\n  deleteAction: PropTypes.func,\r\n};\r\n\r\nexport default Discussion;\r\n","import React, { Component } from 'react';\r\nimport styles from './styles';\r\n\r\nimport RichMediaEditor from 'Components/RichMediaEditor';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ReplyBox extends Component {\r\n  render() {\r\n    const {\r\n      posting,\r\n      onSubmit,\r\n      onChange,\r\n    } = this.props;\r\n\r\n    if (posting) return <div className={styles.loadingWrapper}>Posting your opinion...</div>;\r\n\r\n    return (\r\n      <RichMediaEditor\r\n        type=\"newOpinion\"\r\n        onSave={onSubmit}\r\n        onChange={onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nReplyBox.defaultProps = {\r\n  posting: false,\r\n  onSubmit: () => { },\r\n  onChange: (value) => { },\r\n};\r\n\r\nReplyBox.propTypes = {\r\n  posting: PropTypes.bool,\r\n  onSubmit: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default ReplyBox;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router';\r\nimport moment from 'moment';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nimport PlaceholderImage from 'SharedStyles/placeholder.jpg';\r\nimport Button from 'Components/Button';\r\nimport RichMediaEditor from 'Components/RichMediaEditor';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Opinion extends Component {\r\n  render() {\r\n    const {\r\n      opinionId,\r\n      userAvatar,\r\n      userName,\r\n      userGitHandler,\r\n      opDate,\r\n      opContent,\r\n      userId,\r\n      currentUserId,\r\n      currentUserRole,\r\n      deleteAction,\r\n      deletingOpinion,\r\n    } = this.props;\r\n\r\n    let dateDisplay = moment(opDate);\r\n    dateDisplay = dateDisplay.from(moment());\r\n\r\n    const allowDelete = (userId === currentUserId) || (currentUserRole === 'admin');\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.infoContainer}>\r\n          {/* <img className={styles.avatar} src={userAvatar} /> */}\r\n          <div className={styles.userInfo}>\r\n            <Link to={`/user/${userGitHandler}`} className={styles.name}>{userName || userGitHandler}</Link>\r\n            {/* <a href={`https://www.github.com/${userGitHandler}`} target=\"_blank\" className={styles.gitHandler}>\r\n              <i className={classnames('fa fa-github-alt', styles.gitIcon)}></i>\r\n              <span>{userGitHandler}</span>\r\n            </a> */}\r\n          </div>\r\n          <div className={styles.dateInfo}>{dateDisplay}</div>\r\n          { allowDelete && <Button className={styles.deleteButton} noUppercase onClick={() => { deleteAction(opinionId); }}>\r\n            <i className={classnames('fa fa-trash', styles.trashIcon)}></i>\r\n            <span>Delete</span>\r\n          </Button> }\r\n          {/* <Button noUppercase>Quote</Button> */}\r\n        </div>\r\n\r\n        <div className={styles.opContent}>\r\n          <RichMediaEditor\r\n            readOnly={true}\r\n            value={opContent}\r\n          />\r\n        </div>\r\n\r\n        { (deletingOpinion === opinionId) && <div className={styles.deletingOpinion}>Deleting Opinion ...</div> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nOpinion.defaultProps = {\r\n  opinionId: '12345',\r\n  userAvatar: PlaceholderImage,\r\n  userName: 'User name',\r\n  userGitHandler: 'github',\r\n  opDate: 'a day ago',\r\n  opContent: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n  userId: '12345',\r\n  currentUserId: '12345',\r\n  currentUserRole: 'user',\r\n  deleteAction: () => {},\r\n  deletingOpinion: null,\r\n};\r\n\r\nOpinion.propTypes = {\r\n  opinionId: PropTypes.string,\r\n  userAvatar: PropTypes.string,\r\n  userName: PropTypes.string,\r\n  userGitHandler: PropTypes.string,\r\n  opDate: PropTypes.any,\r\n  opContent: PropTypes.string,\r\n  userId: PropTypes.string,\r\n  currentUserId: PropTypes.string,\r\n  currentUserRole: PropTypes.string,\r\n  deleteAction: PropTypes.func,\r\n  deletingOpinion: PropTypes.any,\r\n};\r\n\r\nexport default Opinion;\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { browserHistory } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport classnames from 'classnames';\r\n\r\nimport {\r\n  getDiscussion,\r\n  toggleFavorite,\r\n  updateOpinionContent,\r\n  postOpinion,\r\n  deletePost,\r\n  deletedDiscussionRedirect,\r\n  deleteOpinion,\r\n} from './actions';\r\n\r\nimport Discussion from 'Components/SingleDiscussion/Discussion';\r\nimport ReplyBox from 'Components/SingleDiscussion/ReplyBox';\r\nimport Opinion from 'Components/SingleDiscussion/Opinion';\r\n\r\nimport styles from './styles';\r\nimport appLayout from 'SharedStyles/appLayout';\r\n\r\nclass SingleDiscussion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { opinionContent: '' };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      forum,\r\n      discussion,\r\n    } = this.props.params;\r\n\r\n    this.props.getDiscussion(discussion);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      deletedDiscussion,\r\n      deletedDiscussionRedirect,\r\n    } = this.props;\r\n\r\n    const { forum } = this.props.params;\r\n\r\n    // check if the discussion is deleted and redirect the user\r\n    if (deletedDiscussion) {\r\n      browserHistory.push(`/${forum}`);\r\n      setTimeout(() => { deletedDiscussionRedirect(); }, 100);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove any existing opinion texts\r\n    this.props.updateOpinionContent(null);\r\n  }\r\n\r\n  userFavoritedDiscussion(userId, favorites) {\r\n    let favorited = false;\r\n    for (let i = 0; i < favorites.length; i++) {\r\n      if (favorites[i] === userId) favorited = true;\r\n    }\r\n    return favorited;\r\n  }\r\n\r\n  handleReplySubmit() {\r\n    const {\r\n      forums,\r\n      postOpinion,\r\n      discussion,\r\n      opinionContent,\r\n      userId,\r\n    } = this.props;\r\n\r\n    const discussion_slug = this.props.params.discussion;\r\n    const forumSlug = this.props.params.forum;\r\n    const forumId = _.find(forums, { forum_slug: forumSlug })._id;\r\n\r\n    postOpinion(\r\n      {\r\n        forum_id: forumId,\r\n        discussion_id: discussion._id,\r\n        user_id: userId,\r\n        content: opinionContent,\r\n      },\r\n      discussion_slug\r\n    );\r\n  }\r\n\r\n  deleteDiscussion() {\r\n    const { discussion } = this.props.params;\r\n    const { deletePost } = this.props;\r\n    deletePost(discussion);\r\n  }\r\n\r\n  deleteOpinion(opinionId) {\r\n    const { discussion } = this.props.params;\r\n    const { deleteOpinion } = this.props;\r\n    deleteOpinion(opinionId, discussion);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      userAuthenticated,\r\n      fetchingDiscussion,\r\n      discussion,\r\n      toggleFavorite,\r\n      toggleingFavorite,\r\n      updateOpinionContent,\r\n      postingOpinion,\r\n      opinionError,\r\n      deletingOpinion,\r\n      deletingDiscussion,\r\n      error,\r\n    } = this.props;\r\n\r\n    if (error) {\r\n      return (<div className={styles.errorMsg}>{error}</div>);\r\n    }\r\n\r\n    // return loading status if discussion is not fetched yet\r\n    if (fetchingDiscussion) {\r\n      return <div className={styles.loadingWrapper}>Loading discussion ...</div>;\r\n    }\r\n\r\n    const {\r\n      _id,\r\n      content,\r\n      date,\r\n      favorites,\r\n      title,\r\n      tags,\r\n      opinions,\r\n    } = discussion;\r\n    const {\r\n      avatarUrl,\r\n      name,\r\n      username,\r\n    } = discussion.user;\r\n\r\n    // check if logged in user is owner of the discussion\r\n    let allowDelete = false;\r\n    if (\r\n      (discussion.user._id === this.props.userId) ||\r\n      this.props.userRole === 'admin'\r\n    ) allowDelete = true;\r\n\r\n    // check if user favorated the discussion\r\n    const userFavorited = this.userFavoritedDiscussion(this.props.userId, favorites);\r\n\r\n    return (\r\n      <div className={appLayout.constraintWidth}>\r\n        <Helmet><title>{`${title} | ReForum`}</title></Helmet>\r\n\r\n        <Discussion\r\n          id={_id}\r\n          userAvatar={avatarUrl}\r\n          userName={username}\r\n          userGitHandler={username}\r\n          discTitle={title}\r\n          discDate={date}\r\n          discContent={content}\r\n          tags={tags}\r\n          favoriteCount={favorites.length}\r\n          favoriteAction={toggleFavorite}\r\n          userFavorited={userFavorited}\r\n          toggleingFavorite={toggleingFavorite}\r\n          allowDelete={allowDelete}\r\n          deletingDiscussion={deletingDiscussion}\r\n          deleteAction={this.deleteDiscussion.bind(this)}\r\n        />\r\n\r\n        { opinionError && <div className={styles.errorMsg}>{opinionError}</div>}\r\n\r\n\r\n        { opinions && opinions.map((opinion) => {\r\n          return (\r\n            <Opinion\r\n              key={opinion._id}\r\n              opinionId={opinion._id}\r\n              // userAvatar={opinion.user.avatarUrl}\r\n              userName={opinion.user.username}\r\n              userGitHandler={opinion.user.username}\r\n              opDate={opinion.date}\r\n              opContent={opinion.content}\r\n              userId={opinion.user_id}\r\n              currentUserId={this.props.userId}\r\n              currentUserRole={this.props.userRole}\r\n              deleteAction={this.deleteOpinion.bind(this)}\r\n              deletingOpinion={deletingOpinion}\r\n            />\r\n          );\r\n        })}\r\n\r\n\r\n        { !userAuthenticated && <div className={styles.signInMsg}>Please sign in to post a reply.</div>}\r\n        { userAuthenticated && <div style={{marginTop:'30px'}}><ReplyBox \r\n          posting={postingOpinion}\r\n          onSubmit={this.handleReplySubmit.bind(this)}\r\n          onChange={(content) => { updateOpinionContent(content); }}\r\n        /></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => {\r\n    return {\r\n      forums: state.app.forums,\r\n      userAuthenticated: state.user.authenticated,\r\n      userId: state.user._id,\r\n      userRole: state.user.role,\r\n      fetchingDiscussion: state.discussion.fetchingDiscussion,\r\n      toggleingFavorite: state.discussion.toggleingFavorite,\r\n      deletingDiscussion: state.discussion.deletingDiscussion,\r\n      deletedDiscussion: state.discussion.deletedDiscussion,\r\n      opinionContent: state.discussion.opinionContent,\r\n      postingOpinion: state.discussion.postingOpinion,\r\n      opinionError: state.discussion.opinionError,\r\n      deletingOpinion: state.discussion.deletingOpinion,\r\n      discussion: state.discussion.discussion,\r\n      error: state.discussion.error,\r\n    };\r\n  },\r\n  (dispatch) => {\r\n    return {\r\n      getDiscussion: (discussionSlug) => { dispatch(getDiscussion(discussionSlug)); },\r\n      toggleFavorite: (discussionId) => { dispatch(toggleFavorite(discussionId)); },\r\n      updateOpinionContent: (content) => { dispatch(updateOpinionContent(content)); },\r\n      postOpinion: (opinion, discussionSlug) => { dispatch(postOpinion(opinion, discussionSlug)); },\r\n      deletePost: (discussionSlug) => { dispatch(deletePost(discussionSlug)); },\r\n      deletedDiscussionRedirect: () => { dispatch(deletedDiscussionRedirect()); },\r\n      deleteOpinion: (opinionId, discussionSlug) => { dispatch(deleteOpinion(opinionId, discussionSlug)); },\r\n    };\r\n  }\r\n)(SingleDiscussion);\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StyleButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.onToggle = (e) => {\r\n      e.preventDefault();\r\n      this.props.onToggle(this.props.style);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let className = `${styles.controlButton}`;\r\n    if (this.props.active) {\r\n      className += ` ${styles.controlButtonActive}`;\r\n    }\r\n\r\n    return (\r\n      <div className={className} onMouseDown={this.onToggle}>\r\n        {this.props.label}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStyleButton.propTypes = {\r\n  onToggle: PropTypes.func.isRequired,\r\n  active: PropTypes.any.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  style: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default StyleButton;\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nimport Button from 'Components/Button';\r\nimport StyleButton from './StyleButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BlockStyleControls extends Component {\r\n  render() {\r\n    const {\r\n      onToggle,\r\n      editorState,\r\n      type,\r\n    } = this.props;\r\n\r\n    const blockTypes = [\r\n      // {label: 'H1', style: 'header-one'},\r\n      // {label: 'H2', style: 'header-two'},\r\n      {label: 'H3', style: 'header-three'},\r\n      {label: 'H4', style: 'header-four'},\r\n      {label: 'H5', style: 'header-five'},\r\n      // {label: 'H6', style: 'header-six'},\r\n      {label: 'Blockquote', style: 'blockquote'},\r\n      // {label: 'UL', style: 'unordered-list-item'},\r\n      // {label: 'OL', style: 'ordered-list-item'},\r\n      {label: 'Code Block', style: 'code-block'},\r\n    ];\r\n\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState\r\n      .getCurrentContent()\r\n      .getBlockForKey(selection.getStartKey())\r\n      .getType();\r\n\r\n    return (\r\n      <div className={styles.controls}>\r\n        { blockTypes.map((eachType) =>\r\n          <StyleButton\r\n            key={eachType.label}\r\n            onToggle={onToggle}\r\n            active={eachType.style === blockType}\r\n            label={eachType.label}\r\n            style={eachType.style}\r\n          />\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBlockStyleControls.propTypes = {\r\n  onToggle: PropTypes.func.isRequired,\r\n  editorState: PropTypes.any.isRequired,\r\n  type: PropTypes.oneOf(['newDiscussion', 'newOpinion']),\r\n};\r\n\r\nexport default BlockStyleControls;\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nimport Button from 'Components/Button';\r\nimport StyleButton from './StyleButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InlineStyleControls extends Component {\r\n  render() {\r\n    const {\r\n      onToggle,\r\n      editorState,\r\n    } = this.props;\r\n\r\n    const inlineStyles = [\r\n      {label: 'Bold', style: 'BOLD'},\r\n      {label: 'Italic', style: 'ITALIC'},\r\n      // {label: 'Underline', style: 'UNDERLINE'},\r\n      {label: 'Monospace', style: 'CODE'},\r\n    ];\r\n\r\n    const currentStyle = editorState.getCurrentInlineStyle();\r\n\r\n    return (\r\n      <div className={styles.controls}>\r\n        { inlineStyles.map((eachType) =>\r\n          <StyleButton\r\n            key={eachType.label}\r\n            onToggle={onToggle}\r\n            active={currentStyle.has(eachType.style)}\r\n            label={eachType.label}\r\n            style={eachType.style}\r\n          />\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInlineStyleControls.propTypes = {\r\n  onToggle: PropTypes.func.isRequired,\r\n  editorState: PropTypes.any.isRequired,\r\n  type: PropTypes.oneOf(['newDiscussion', 'newOpinion']),\r\n};\r\n\r\nexport default InlineStyleControls;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Editor,\r\n  EditorState,\r\n  ContentState,\r\n  RichUtils,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n} from 'draft-js';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nimport Button from 'Components/Button';\r\nimport BlockStyleControls from './BlockStyleControls';\r\nimport InlineStyleControls from './InlineStyleControls';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass RichEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n\r\n    this.focus = () => this.refs.editor.focus();\r\n    this.onEditorStateChange = this.onEditorStateChange.bind(this);\r\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\r\n    this.onTab = this.onTab.bind(this);\r\n    this.toggleBlockType = this.toggleBlockType.bind(this);\r\n    this.toggleInlineStyle = this.toggleInlineStyle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { value } = this.props;\r\n    if (value) {\r\n      const contentState = convertFromRaw(JSON.parse(value));\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.setState({ editorState });\r\n    }\r\n  }\r\n\r\n  onEditorStateChange(editorState) {\r\n    const { onChange } = this.props;\r\n    this.setState({ editorState });\r\n\r\n    // trigger on change converting the ContentState to raw object\r\n    onChange(JSON.stringify(convertToRaw(editorState.getCurrentContent())));\r\n  }\r\n\r\n  handleKeyCommand(command) {\r\n    const newState = RichUtils.handleKeyCommand(this.state.editorState, command);\r\n    if (newState) {\r\n      this.onEditorStateChange(newState);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onTab(event) {\r\n    const maxDepth = 4;\r\n    this.onEditorStateChange(RichUtils.onTab(event, this.state.editorState, maxDepth));\r\n  }\r\n\r\n  toggleBlockType(blockType) {\r\n    this.onEditorStateChange(\r\n      RichUtils.toggleBlockType(\r\n        this.state.editorState,\r\n        blockType\r\n      )\r\n    );\r\n  }\r\n\r\n  toggleInlineStyle(inlineStyle) {\r\n    this.onEditorStateChange(\r\n      RichUtils.toggleInlineStyle(\r\n        this.state.editorState,\r\n        inlineStyle\r\n      )\r\n    );\r\n  }\r\n\r\n  customBlockStyles(contentBlock) {\r\n    const type = contentBlock.getType();\r\n    if (type === 'blockquote') return styles.editorBlockquoteStyle;\r\n    if (type === 'code-block') return styles.editorCodeStyle;\r\n    if (type === 'header-one') return styles.editorH1Style;\r\n    if (type === 'header-two') return styles.editorH2Style;\r\n    if (type === 'header-three') return styles.editorH3Style;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      type,\r\n      onSave,\r\n      readOnly,\r\n    } = this.props;\r\n\r\n    // styling for inline styles\r\n    const inlineStyleMap = {\r\n      'CODE': {\r\n        color: '#e74c3c',\r\n        backgroundColor: '#f9f9f9',\r\n        border: '1px solid #e8e8e8',\r\n        fontFamily: 'monospace',\r\n        padding: '2px 5px',\r\n        margin: '0px 5px',\r\n      },\r\n    };\r\n\r\n    let saveButtonLabel = '';\r\n    if (type === 'newOpinion') saveButtonLabel = 'Reply';\r\n    if (type === 'newDiscussion') saveButtonLabel = 'Post Discussion';\r\n\r\n    let placeholder = '';\r\n    if (type === 'newOpinion') placeholder = 'Your opinion...';\r\n    if (type === 'newDiscussion') placeholder = 'Discussion summary...';\r\n\r\n    return (\r\n      <div className={classnames(styles.container, readOnly && styles.readOnlyContainer)}>\r\n        { !readOnly && <div className={styles.controlsContainer}>\r\n          <InlineStyleControls\r\n            type={type}\r\n            editorState={this.state.editorState}\r\n            onToggle={this.toggleInlineStyle}\r\n          />\r\n          <BlockStyleControls\r\n            type={type}\r\n            editorState={this.state.editorState}\r\n            onToggle={this.toggleBlockType}\r\n          />\r\n        </div> }\r\n\r\n        <div\r\n          className={classnames(\r\n            styles.editorContainer,\r\n            !readOnly && styles[type],\r\n            readOnly && styles.readOnlyEditorContainer\r\n          )}\r\n          onClick={this.focus}\r\n        >\r\n          <Editor\r\n            customStyleMap={inlineStyleMap}\r\n            blockStyleFn={this.customBlockStyles}\r\n            readOnly={readOnly}\r\n            editorState={this.state.editorState}\r\n            onChange={this.onEditorStateChange}\r\n            placeholder={placeholder}\r\n            handleKeyCommand={this.handleKeyCommand}\r\n            onTab={this.onTab}\r\n            ref='editor'\r\n          />\r\n        </div>\r\n\r\n        { !readOnly && <Button noUppercase style={{ alignSelf: 'center' }} onClick={onSave}>\r\n          {saveButtonLabel}\r\n        </Button> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRichEditor.defaultProps = {\r\n  readOnly: false,\r\n  value: null,\r\n  type: 'newDiscussion',\r\n  onChange: () => { },\r\n  onSave: () => { },\r\n};\r\n\r\nRichEditor.propTypes = {\r\n  readOnly: PropTypes.bool,\r\n  value: PropTypes.any,\r\n  type: PropTypes.oneOf(['newDiscussion', 'newOpinion']),\r\n  onChange: PropTypes.func,\r\n  onSave: PropTypes.func,\r\n};\r\n\r\nexport default RichEditor;\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\n\r\nimport Button from 'Components/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PinButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: false };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { value } = nextProps;\r\n    this.setState({ value });\r\n  }\r\n\r\n  updateValue(value) {\r\n    this.props.onChange(value);\r\n    this.setState({ value });\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.label}>Is it a pinned discussion?</div>\r\n\r\n        <div className={styles.btnContainer}>\r\n          <Button\r\n            alwaysActive={value ? true : false}\r\n            onClick={() => { this.updateValue(true); }}\r\n          >\r\n            Yes\r\n          </Button>\r\n\r\n          <Button\r\n            alwaysActive={!value ? true : false}\r\n            onClick={() => { this.updateValue(false); }}\r\n          >\r\n            No\r\n          </Button>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPinButton.defaultProps = {\r\n  onChange: (val) => {},\r\n  value: false,\r\n};\r\n\r\nPinButton.propTypes = {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.bool,\r\n};\r\n\r\nexport default PinButton;\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport _ from 'lodash';\r\nimport styles from './styles';\r\n\r\nimport Button from 'Components/Button';\r\nimport Tag from 'Components/Tag';\r\nimport PropTypes from 'prop-types';\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\n\r\nclass TagsInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorMsg: null,\r\n      tags: [],\r\n      tagName: '',\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { value } = nextProps;\r\n    this.setState({ tags: value, errorMsg: null });\r\n  }\r\n\r\n  validateTag(tagName) {\r\n    const regex = /^[a-z0-9.\\-_$@*!]{4,20}$/;\r\n    return regex.test(tagName);\r\n  }\r\n\r\n  sameTag(tagName) {\r\n    const { tags } = this.state;\r\n    let matched = false;\r\n    tags.map((tag) => {\r\n      if (tag === tagName) matched = true;\r\n    });\r\n    return matched;\r\n  }\r\n\r\n  addTag() {\r\n    const {\r\n      tagName,\r\n      tags,\r\n      errorMsg,\r\n    } = this.state;\r\n\r\n    if (this.validateTag(tagName)) {\r\n      if (!this.sameTag(tagName)) {\r\n        const newTags = tags.concat(tagName);\r\n        this.setState({\r\n          tags: newTags,\r\n          errorMsg: null,\r\n          tagName: '',\r\n        });\r\n        this.props.onChange(newTags);\r\n      } else {\r\n        this.setState({ errorMsg: 'Same tag!!!' });\r\n      }\r\n    } else {\r\n      this.setState({ errorMsg: 'Tags can only contain small letters and numbers. No space or special characters please. Min 4 and max 20 chars.' });\r\n    }\r\n  }\r\n\r\n  removeTag(position) {\r\n    const { tags } = this.state;\r\n    const newTags = [...tags.slice(0, position), ...tags.slice(position + 1, tags.length)];\r\n    this.setState({ tags: newTags });\r\n    this.props.onChange(newTags);\r\n  }\r\n\r\n  renderTags() {\r\n    const { tags } = this.state;\r\n\r\n    return tags.map((tag, i) => {\r\n      return (\r\n        <Tag\r\n          name={tag}\r\n          key={tag}\r\n          withRemove\r\n          removeAction={() => { this.removeTag(i); }}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  renderInput() {\r\n    const {\r\n      tagName,\r\n      tags,\r\n    } = this.state;\r\n    const { maxTagCount } = this.props;\r\n\r\n    if ( tags.length < maxTagCount ) {\r\n      return (\r\n        <div className={styles.inputContainer}>\r\n          <input\r\n            className={styles.tagInput}\r\n            placeholder={'tag name...'}\r\n            value={tagName}\r\n            onChange={(e) => { this.setState({ tagName: e.target.value }); }}\r\n          />\r\n          <Button\r\n            className={styles.addButton}\r\n            onClick={() => { this.addTag(); }}\r\n          >\r\n            <AddCircleRoundedIcon color=\"primary\" fontSize=\"small\"/>\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      errorMsg,\r\n      tagName,\r\n      tags,\r\n    } = this.state;\r\n\r\n    const { maxTagCount } = this.props;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.tagContainer}>\r\n          <div className={styles.label}>Tags :</div>\r\n          { this.renderTags() }\r\n          { this.renderInput() }\r\n        </div>\r\n        { errorMsg && <div className={styles.errorMsg}>{errorMsg}</div> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTagsInput.defaultProps = {\r\n  value: [],\r\n  maxTagCount: 3,\r\n  onChange: (tags) => {},\r\n};\r\n\r\nTagsInput.propTypes = {\r\n  value: PropTypes.array,\r\n  maxTagCount: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default TagsInput;\r\n","import { hashHistory } from 'react-router';\r\nimport {\r\n  POSTING_DISCUSSION_START,\r\n  POSTING_DISCUSSION_END,\r\n  POSTING_DISCUSSION_SUCCESS,\r\n  POSTING_DISCUSSION_FAILURE,\r\n\r\n  UPDATE_DISCUSSION_TITLE,\r\n  UPDATE_DISCUSSION_CONTENT,\r\n  UPDATE_DISCUSSION_PIN_STATUS,\r\n  UPDATE_DISCUSSION_TAGS,\r\n\r\n  CLEAR_SUCCESS_MESSAGE,\r\n} from './constants';\r\nimport { postDiscussionApi } from './api';\r\n\r\n/**\r\n * post a new discussion\r\n * @param  {ObjectId} userId\r\n * @param  {ObjectId} forumId\r\n * @param  {String} currentForum\r\n * @return {action}\r\n */\r\nexport const postDiscussion = (userId, forumId, currentForum) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: POSTING_DISCUSSION_START });\r\n\r\n    // validate discussion inputs\r\n    // discussion values are in redux state\r\n    const {\r\n      title,\r\n      content,\r\n      tags,\r\n      pinned,\r\n    } = getState().newDiscussion;\r\n\r\n    let validated = true;\r\n\r\n    if (!userId || !forumId) {\r\n      validated = false;\r\n      return dispatch({\r\n        type: POSTING_DISCUSSION_FAILURE,\r\n        payload: 'Something is wrong with user/forum.',\r\n      });\r\n    }\r\n\r\n    if (title === null || title.length < 8) {\r\n      validated = false;\r\n      return dispatch({\r\n        type: POSTING_DISCUSSION_FAILURE,\r\n        payload: 'Title should be at least 8 characters.',\r\n      });\r\n    }\r\n\r\n    if (content === null || content.length === 0) {\r\n      validated = false;\r\n      return dispatch({\r\n        type: POSTING_DISCUSSION_FAILURE,\r\n        payload: 'Please write some content before posting.',\r\n      });\r\n    }\r\n\r\n    // if (tags === null || tags.length === 0) {\r\n    //   validated = false;\r\n    //   return dispatch({\r\n    //     type: POSTING_DISCUSSION_FAILURE,\r\n    //     payload: 'Please provide some tags.',\r\n    //   });\r\n    // }\r\n\r\n    // make api call if post is validated\r\n    if (validated) {\r\n      postDiscussionApi({\r\n        userId,\r\n        forumId,\r\n        title,\r\n        content,\r\n        tags,\r\n        pinned,\r\n      }).then(\r\n        (data) => {\r\n          if (data.data.postCreated === true) {\r\n            dispatch({ type: POSTING_DISCUSSION_SUCCESS });\r\n            setTimeout(() => { dispatch({ type: CLEAR_SUCCESS_MESSAGE }); }, 2000);\r\n\r\n            // issue a redirect to the newly reacted discussion\r\n            hashHistory.push(`/${currentForum}/discussion/${data.data.discussion_slug}`);\r\n          } else {\r\n            dispatch({\r\n              type: POSTING_DISCUSSION_FAILURE,\r\n              payload: 'Something is wrong at our server end. Please try again later',\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          dispatch({\r\n            type: POSTING_DISCUSSION_FAILURE,\r\n            payload: error,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * update the discussion title in redux state (controlled input)\r\n * @param  {String} value\r\n * @return {action}\r\n */\r\nexport const updateDiscussionTitle = (value) => {\r\n  return {\r\n    type: UPDATE_DISCUSSION_TITLE,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n/**\r\n * update discussion content in redux state (controlled input)\r\n * @param  {Object} value\r\n * @return {action}\r\n */\r\nexport const updateDiscussionContent = (value) => {\r\n  return {\r\n    type: UPDATE_DISCUSSION_CONTENT,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n/**\r\n * update discussion pinned status in redux state (controlled input)\r\n * @param  {Boolean} value\r\n * @return {action}\r\n */\r\nexport const updateDiscussionPinStatus = (value) => {\r\n  return {\r\n    type: UPDATE_DISCUSSION_PIN_STATUS,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n/**\r\n * update discussion tags in redux state (controlled input)\r\n * @param  {Array} value\r\n * @return {action}\r\n */\r\nexport const updateDiscussionTags = (value) => {\r\n  return {\r\n    type: UPDATE_DISCUSSION_TAGS,\r\n    payload: value,\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport env from '../../env.js';\r\nimport storage from './../../App/storage.js';\r\n\r\nexport const postDiscussionApi = (discussion) => {\r\n  var accessString = storage.get('token');\r\n  return axios.post(env.url+'/api/discussion/newDiscussion', discussion,{\r\n    headers: { Authorization: `bearer ${accessString}` },\r\n  });\r\n};\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport classnames from 'classnames';\r\n\r\nimport RichEditor from 'Components/RichEditor';\r\nimport RichMediaEditor from 'Components/RichMediaEditor';\r\nimport PinButton from 'Components/NewDiscussion/PinButton';\r\nimport TagsInput from 'Components/NewDiscussion/TagsInput';\r\n\r\nimport {\r\n  postDiscussion,\r\n  updateDiscussionTitle,\r\n  updateDiscussionContent,\r\n  updateDiscussionPinStatus,\r\n  updateDiscussionTags,\r\n} from './actions';\r\n\r\nimport styles from './styles';\r\nimport appLayout from 'SharedStyles/appLayout.module.css';\r\n\r\nclass NewDiscussion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      forumId: null,\r\n      userId: null,\r\n      fatalError: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      user,\r\n      currentForum,\r\n      forums,\r\n    } = this.props;\r\n\r\n    this.setUserAndForumID(user, forums, currentForum);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      user,\r\n      currentForum,\r\n      forums,\r\n    } = nextProps;\r\n\r\n    this.setUserAndForumID(user, forums, currentForum);\r\n  }\r\n\r\n  setUserAndForumID(user, forums, currentForum) {\r\n    const forumId = _.find(forums, { forum_slug: currentForum });\r\n    if (forumId) {\r\n      const currentForumId = forumId._id;\r\n      this.setState({\r\n        forumId: currentForumId,\r\n        userId: user._id,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        fatalError: 'Invalid forum buddy, go for the right one!',\r\n      });\r\n    }\r\n  }\r\n\r\n  renderEditor() {\r\n    const {\r\n      authenticated,\r\n      role,\r\n    } = this.props.user;\r\n\r\n    const {\r\n      updateDiscussionTitle,\r\n      updateDiscussionContent,\r\n      updateDiscussionPinStatus,\r\n      updateDiscussionTags,\r\n      postDiscussion,\r\n      currentForum,\r\n    } = this.props;\r\n\r\n    const {\r\n      title,\r\n      content,\r\n      tags,\r\n      pinned,\r\n    } = this.props.newDiscussion;\r\n\r\n    const {\r\n      forumId,\r\n      userId,\r\n    } = this.state;\r\n\r\n    // only show the editor when user is authenticated\r\n    if (authenticated) {\r\n      return [\r\n        <input\r\n          key={'title'}\r\n          type=\"text\"\r\n          className={styles.titleInput}\r\n          placeholder={'Discussion title...'}\r\n          value={title}\r\n          onChange={(event) => { updateDiscussionTitle(event.target.value); }}\r\n        />,\r\n        (role === 'admin') && <PinButton\r\n          key={'pinned'}\r\n          value={pinned}\r\n          onChange={(value) => { updateDiscussionPinStatus(value); }}\r\n        />,\r\n        <TagsInput\r\n          key={'tags'}\r\n          value={tags}\r\n          onChange={(tags) => { updateDiscussionTags(tags); }}\r\n        />,\r\n        // <RichEditor\r\n        //   key={'content'}\r\n        //   type='newDiscussion'\r\n        //   value={content}\r\n        //   onChange={(value) => { updateDiscussionContent(value); }}\r\n        //   onSave={() => { postDiscussion(userId, forumId, currentForum); }}\r\n        // />,\r\n        \r\n        <RichMediaEditor \r\n        key={'content'}\r\n        type='newDiscussion'\r\n        value={content}\r\n        onChange={(value) => { updateDiscussionContent(value); }}\r\n        onSave={() => { postDiscussion(userId, forumId, currentForum); }}/>\r\n        ,\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <div className={classnames(appLayout.constraintWidth, styles.signInMsg)}>\r\n        Please sign in before posting a new discussion.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { fatalError } = this.state;\r\n\r\n    if (fatalError) { return (<div className={classnames(styles.errorMsg, styles.fatalError)}>{fatalError}</div>); }\r\n\r\n    const { currentForum } = this.props;\r\n    const {\r\n      errorMsg,\r\n      postingSuccess,\r\n      postingDiscussion,\r\n    } = this.props.newDiscussion;\r\n\r\n    return (\r\n      <div className={classnames(appLayout.constraintWidth, styles.content)}>\r\n        <Helmet><title>ReForum | New Discussion</title></Helmet>\r\n\r\n        <div className={styles.forumInfo}>\r\n          You are creating a new discussion on <span className={styles.forumName}>{currentForum}</span> forum.\r\n        </div>\r\n        <div className={styles.errorMsg}>{errorMsg}</div>\r\n        { postingSuccess && <div className={styles.successMsg}>Your discussion is created :-)</div> }\r\n        { this.renderEditor() }\r\n        { postingDiscussion && <div className={styles.postingMsg}>Posting discussion...</div> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => { return {\r\n    user: state.user,\r\n    forums: state.app.forums,\r\n    currentForum: state.app.currentForum,\r\n    newDiscussion: state.newDiscussion,\r\n  }; },\r\n  (dispatch) => { return {\r\n    postDiscussion: (userId, forumId, currentForum) => { dispatch(postDiscussion(userId, forumId, currentForum)); },\r\n    updateDiscussionTitle: (value) => { dispatch(updateDiscussionTitle(value)); },\r\n    updateDiscussionContent: (value) => { dispatch(updateDiscussionContent(value)); },\r\n    updateDiscussionPinStatus: (value) => { dispatch(updateDiscussionPinStatus(value)); },\r\n    updateDiscussionTags: (value) => { dispatch(updateDiscussionTags(value)); },\r\n  }; }\r\n)(NewDiscussion);\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    const {\r\n      name,\r\n      gitHandler,\r\n      location,\r\n      avatarUrl,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.avatarContainer}>\r\n          {/* <img className={styles.avatar} src={avatarUrl} alt={`${name} avatar`} /> */}\r\n        </div>\r\n        <div className={styles.infoContainer}>\r\n          <div className={styles.name}>{ name }</div>\r\n          {/* <div className={styles.gitHandler}><i className={classnames('fa fa-github-alt', styles.gitIcon)}></i> { gitHandler }</div>\r\n          <div className={styles.location}>{ location }</div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfile.defaultProps = {\r\n  name: 'Hello World',\r\n  gitHandler: 'helloWorld',\r\n  location: 'Somewhere in the world',\r\n  avatarUrl: 'https://google.com',\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  gitHandler: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatarUrl: PropTypes.string,\r\n};\r\n\r\nexport default Profile;\r\n","import {\r\n  FETCH_USER_PROFILE_START,\r\n  FETCH_USER_PROFILE_SUCCESS,\r\n  FETCH_USER_PROFILE_FAILURE,\r\n} from './constants';\r\n\r\nimport {\r\n  fetchUserProfileApi,\r\n} from './api';\r\n\r\n/**\r\n * fetch the users profile from the server\r\n * @param  {String} userSlug\r\n * @return {action}\r\n */\r\nexport const fetchUserProfile = (userSlug) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: FETCH_USER_PROFILE_START });\r\n\r\n    fetchUserProfileApi(userSlug).then(\r\n      data => {\r\n        if (data.data.error) dispatch({ type: FETCH_USER_PROFILE_FAILURE });\r\n        else dispatch({ type: FETCH_USER_PROFILE_SUCCESS, payload: data.data });\r\n      },\r\n      error => dispatch({ type: FETCH_USER_PROFILE_FAILURE })\r\n    );\r\n  };\r\n};\r\n","/**\r\n * user profile apis\r\n */\r\n\r\nimport axios from 'axios';\r\nimport env from '../../env.js';\r\n\r\nexport const fetchUserProfileApi = (userSlug) => {\r\n  return axios.get(env.url+`/api/user/profile/${userSlug}`);\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport classnames from 'classnames';\r\nimport appLayout from 'SharedStyles/appLayout';\r\nimport styles from './styles';\r\n\r\n// components used in this view\r\nimport Profile from 'Components/UserProfile/Profile';\r\nimport FeedBox from 'Components/FeedBox';\r\n\r\n// actions\r\nimport {\r\n  fetchUserProfile,\r\n} from './actions';\r\n\r\nclass UserProfile extends Component {\r\n  componentDidMount() {\r\n    const { fetchUserProfile } = this.props;\r\n    const { username } = this.props.params;\r\n    fetchUserProfile(username);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    // fetch profile if different username\r\n    const { username: oldUsername } = this.props.params;\r\n    const { username: futureUsername } = newProps.params;\r\n\r\n    // only update if different usernames\r\n    if (oldUsername !== futureUsername) {\r\n      const { fetchUserProfile } = this.props;\r\n      fetchUserProfile(futureUsername);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      fetchingProfile,\r\n      profile,\r\n      error,\r\n    } = this.props;\r\n\r\n    if (error) {\r\n      return <div className={styles.errorMsg}>{ error }</div>;\r\n    }\r\n\r\n    const {\r\n      name,\r\n      username,\r\n      avatarUrl,\r\n      github,\r\n      discussions,\r\n    } = profile;\r\n\r\n    if (fetchingProfile) {\r\n      return (\r\n        <div className={classnames(appLayout.constraintWidth, styles.loadingMsg)}>\r\n          Loading users profile ...\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={classnames(appLayout.constraintWidth, styles.container)}>\r\n        <Helmet><title>{`${username} | ReForum`}</title></Helmet>\r\n\r\n        <div className={appLayout.primaryContent}>\r\n          <Profile\r\n            name={username}\r\n            gitHandler={username}\r\n            // location={github.location}\r\n            // avatarUrl={avatarUrl}\r\n          />\r\n\r\n          <FeedBox\r\n            userProfile\r\n            type='general'\r\n            discussions={discussions}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => { return {\r\n    fetchingProfile: state.userProfile.fetchingProfile,\r\n    profile: state.userProfile.profile,\r\n    error: state.userProfile.error,\r\n  }; },\r\n  (dispatch) => { return {\r\n    fetchUserProfile: (userSlug) => { dispatch(fetchUserProfile(userSlug)); },\r\n  }; }\r\n)(UserProfile);\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <h3>Coudn't found the url buddy. Please check it out.</h3>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Route, browserHistory,hashHistory, IndexRoute } from 'react-router';\r\nimport { Provider } from 'react-redux';\r\nimport styles from './App/styles';\r\n\r\n// app store\r\nimport appStore from './App/store';\r\n\r\n// app views\r\nimport AppContainer from './App/App';\r\nimport AdminContainer from './App/Admin';\r\nimport Dashboard from './Views/AdminDashboard';\r\nimport Header from 'Containers/Header';\r\nimport ForumFeed from './Views/ForumFeed';\r\nimport SingleDiscussion from './Views/SingleDiscussion';\r\nimport NewDiscussion from './Views/NewDiscussion';\r\nimport UserProfile from './Views/UserProfile';\r\nimport NotFound from './Views/NotFound';\r\n\r\n\r\nReactDOM.render (\r\n  <Provider store={appStore}>\r\n    <Router history={hashHistory}>\r\n      <Route path=\"/admin\" component={AdminContainer}>\r\n        <IndexRoute component={Dashboard} />\r\n      </Route>\r\n      <Route path=\"/\" component={AppContainer}>\r\n        <IndexRoute component={ForumFeed} />\r\n        <Route path=\":forum\" component={ForumFeed} />\r\n        <Route path=\":forum/discussion/:discussion\" component={SingleDiscussion} />\r\n        <Route path=\":forum/new_discussion\" component={NewDiscussion} />\r\n        <Route path=\"user/:username\" component={UserProfile} />\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Route>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderColor\":\"#e8e8e8\",\"backShade\":\"#f9f9f9\",\"secondaryFontColor\":\"#999\",\"primaryFontColor\":\"#000\",\"container\":\"styles_container__32pJc\",\"header\":\"styles_header__3J5NH\",\"title\":\"styles_title__2Y61y\",\"sortList\":\"styles_sortList__2rXSh\",\"sort\":\"styles_sort__3D7NS\",\"posts\":\"styles_posts__1-s97\",\"loading\":\"styles_loading__1bTWC\",\"sortActive\":\"styles_sortActive__24emR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryFontColor\":\"#000\",\"secondaryFontColor\":\"#999\",\"borderColor\":\"#e8e8e8\",\"backShade\":\"#f9f9f9\",\"smallBP\":\"(max-width: 768px)\",\"container\":\"styles_container__25cCp\",\"title\":\"styles_title__2Dmzm\",\"titleBottomMargin\":\"styles_titleBottomMargin__3rIFu\",\"posterInfo\":\"styles_posterInfo__3oBbo\",\"name\":\"styles_name__3PGrd\",\"gitHandler\":\"styles_gitHandler__2ES-g\",\"gitIcon\":\"styles_gitIcon__1DsEu\",\"boxFooter\":\"styles_boxFooter__2cYMq\",\"tagsArea\":\"styles_tagsArea__3Qtio\",\"postInfo\":\"styles_postInfo__1uC7a\",\"info\":\"styles_info__6KI_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"largeBP\":\"(min-width: 1100px)\",\"borderColor\":\"#e8e8e8\",\"secondaryFontColor\":\"#999\",\"content\":\"styles_content__2Nmvw\",\"forumName\":\"styles_forumName__uzX5Z\",\"errorMsg\":\"styles_errorMsg__2w1XB\",\"fatalError\":\"styles_fatalError__3zdgV\",\"titleInput\":\"styles_titleInput__3uZzz\",\"signInMsg\":\"styles_signInMsg__3lyFR\",\"postingMsg\":\"styles_postingMsg__3AiQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderColor\":\"#e8e8e8\",\"secondaryFontColor\":\"#999\",\"primaryFontColor\":\"#000\",\"smallBP\":\"(max-width: 768px)\",\"container\":\"styles_container__21dUI\",\"deletingOpinion\":\"styles_deletingOpinion__1lDZU\",\"infoContainer\":\"styles_infoContainer__2SFMV\",\"avatar\":\"styles_avatar__15s9p\",\"userInfo\":\"styles_userInfo__3ztqE\",\"name\":\"styles_name__2d2SU\",\"gitIcon\":\"styles_gitIcon__23hda\",\"dateInfo\":\"styles_dateInfo__1vOgs\",\"deleteButton\":\"styles_deleteButton__2kDjp\",\"trashIcon\":\"styles_trashIcon__1ur69\",\"opContent\":\"styles_opContent__1j_g7\",\"commentFooter\":\"styles_commentFooter__3sI7Q\",\"favoriteButton\":\"styles_favoriteButton__2g-b4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryFontColor\":\"#000\",\"secondaryFontColor\":\"#999\",\"borderColor\":\"#e8e8e8\",\"smallBP\":\"(max-width: 768px)\",\"container\":\"styles_container__32Xnc\",\"tagContainer\":\"styles_tagContainer__2dSQH\",\"label\":\"styles_label__VDnFc\",\"inputContainer\":\"styles_inputContainer__3_xcz\",\"tagInput\":\"styles_tagInput__h5VmN\",\"addButton\":\"styles_addButton__HIOas\",\"errorMsg\":\"styles_errorMsg__2wRfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryFontColor\":\"#000\",\"secondaryFontColor\":\"#999\",\"borderColor\":\"#e8e8e8\",\"smallBP\":\"(max-width: 768px)\",\"mediumBP\":\"(min-width: 769px) and (max-width: 1099px)\",\"largeBP\":\"(min-width: 1100px)\",\"container\":\"styles_container__2VrVc\",\"userAvatar\":\"styles_userAvatar__2vXv3\",\"title\":\"styles_title__34I9J\",\"signInLink\":\"styles_signInLink__2UOrB\",\"signInBtn\":\"styles_signInBtn__i6vUD\",\"subMenu\":\"styles_subMenu__34-nj\",\"subMenuItem\":\"styles_subMenuItem__296M2\",\"subMenuClose\":\"styles_subMenuClose__3RTt0\",\"gitLoginBtn\":\"styles_gitLoginBtn__2GBjR\",\"subMenuOcto\":\"styles_subMenuOcto__tZuwE\",\"components-form-demo-normal-login\":\"styles_components-form-demo-normal-login__1kOM5\",\"login-form\":\"styles_login-form__3eDrR\",\"login-form-forgot\":\"styles_login-form-forgot__2p9gi\",\"login-form-button\":\"styles_login-form-button__2Lw4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderColor\":\"#e8e8e8\",\"secondaryFontColor\":\"#999\",\"primaryFontColor\":\"#000\",\"buttonDefaults\":\"styles_buttonDefaults__1QRJm\",\"default\":\"styles_default__3CPQt\",\"outline\":\"styles_outline__1PHNI\",\"fullWidth\":\"styles_fullWidth__1ADux\",\"noUppercase\":\"styles_noUppercase__2neB_\",\"alwaysActive\":\"styles_alwaysActive__2NAsy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingWrapper\":\"styles_loadingWrapper__NmPUI\",\"gitForkTag\":\"styles_gitForkTag__3BRMD\",\"gitLink\":\"styles_gitLink__2E02T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryFontColor\":\"#000\",\"secondaryFontColor\":\"#999\",\"borderColor\":\"#e8e8e8\",\"smallBP\":\"(max-width: 768px)\",\"navigationBar\":\"styles_navigationBar__NoDIb\",\"links\":\"styles_links__3qIAB\",\"linkActive\":\"styles_linkActive__PswvT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallBP\":\"(max-width: 768px)\",\"container\":\"styles_container__3Pr7e\",\"countsContainer\":\"styles_countsContainer__2Snmx\",\"loadingMsg\":\"styles_loadingMsg__2qinY\",\"errorMsg\":\"styles_errorMsg__2Br2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderColor\":\"#e8e8e8\",\"secondaryFontColor\":\"#999\",\"primaryFontColor\":\"#000\",\"backShade\":\"#f9f9f9\",\"smallBP\":\"(max-width: 768px)\",\"container\":\"styles_container__3Vaxm\",\"readOnlyContainer\":\"styles_readOnlyContainer__3cmyS\",\"editorContainer\":\"styles_editorContainer__2_cLj\",\"readOnlyEditorContainer\":\"styles_readOnlyEditorContainer__3T9pa\",\"buttonClass\":\"styles_buttonClass__L8Dok\",\"newDiscussion\":\"styles_newDiscussion__3za6e\",\"controlsContainer\":\"styles_controlsContainer__1d7zc\",\"controls\":\"styles_controls__3_NSH\",\"controlButton\":\"styles_controlButton__xQEh_\",\"controlButtonActive\":\"styles_controlButtonActive__2V2vm\",\"editorBlockquoteStyle\":\"styles_editorBlockquoteStyle__3xZMT\",\"editorCodeStyle\":\"styles_editorCodeStyle__2XA7r\",\"editorH1Style\":\"styles_editorH1Style__2a_e5\",\"editorH2Style\":\"styles_editorH2Style__CxWPe\",\"editorH3Style\":\"styles_editorH3Style__1JJ1e\"};"],"sourceRoot":""}